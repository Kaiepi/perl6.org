=head1 Perl 6 Summary for 2005-05-03 through 2005-05-17

All~

Welcome ot another fortnight's summary.  Wouldn't it just figure that I can't think of anything sufficiently non-sequiterish to amuse myself.  Perhaps I need a running gag like Leon Brocard or chromatic's cummingseque capitalization....  Maybe I should start one and not tell you.  That could be fun.

=head2 Perl 6 Compiler

=head3 pugs commit emails

If you have ever been foolish enough to want to get an email for every commit in Pugs, Sam Vilain created a way to help you sip from the firehose.  Have fun.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/1c9e026f0f0e7903/286f5a062264ee23#286f5a062264ee23>



=head3 given when nested

Luke Palmer had a question about how nested when statements in a given block should act.  His intuition disagreed with Pugs, but most others supported Pugs.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/2025f76d55caf683/ae383ce46fd7b5fd#ae383ce46fd7b5fd>



=head3 I don't need to walk around in circles

Autrijus has made Pugs into a registered compiler for Parrot.  Since Pugs already allowed you to embed parrot code (well pir anyway) directly into perl 6, this allows you to embed the perl 6 in your pir in your perl 6.  Now the possibilities are endless, at least until you blow your mental stack.  Those of you with tail call optimization in your mental stack may simply go into an infinite loop if you prefer.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/8523b893c996fa70/76b3a96677269d8c#76b3a96677269d8c>



=head3 xor on lists

Trewth Seeker expressed his opinion about the proper definition of xor quite strongly.  Unfortunately, his opinion is at odds with established mathematics, as Mark Biggar pointed out to him.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/96465d8b9ad451d9/64a06cc494ffd6ac#64a06cc494ffd6ac>



=head3 PGE features update

Patrick provided an update on the state of the Perl Grammar Engine.  It has many nifty new features.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/bcca948a1e74f7e7/1c76f7aaa60db60c#1c76f7aaa60db60c>



=head3 Pugs on Cygwin

Rob Kinyon and Gaal Yahas worked to improve Pugs support for Cygwin.  Unfortunately the thread winds down with an unanswered question,  fortunately Stevan clued me in on IRC that things are working just yet.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/1972b001c76c652c/1a6127fc512f3042#1a6127fc512f3042>



=head3 Pugs gets some objects and some rules

Autrijus announced that Pugs now has basic support for Objects and Rules.  Sometimes he scares me.  Usually he just makes me really want to learn haskell though.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/1f38571c074915e2/048f7c691486ebfb#048f7c691486ebfb>



=head3 regression test
 	
Miroslav Silovic provided a regression test for hyper ops.  Some people just don't appreciate the fun of regressing.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/329b67f64c39aa38/07e4d4fb94cb9b8c#07e4d4fb94cb9b8c>



=head3 basic test for classes

Stevan Little provided a patch for a simple object test.  Autrijus applied it.  Odd, cause I am pretty sure that Stevan has the commit bit...

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/299b5349fa11d3ce/fe404aea60d99b7f#fe404aea60d99b7f>



=head3 torturing PGE

Juerd provided a link to a big rule that could segfault PGE.  Kind reminds me of a homework assignment I had to create a regular expression which matched all strings of numbers that did not contain any repeated digits.  Easy in perl, but hard in math.  I think the resultant regex was somewhere around 17 MB.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/038577a4ba20a869/8f58d037069d30c3#8f58d037069d30c3>



=head3 Pugs 6.2.3 with Live CD

Autrijus released Pugs 6.2.3 which contains 10% more awesome then Pugs 6.2.2.  You should check it out on the live CD that Ingo Blechschmidt released.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/b11fbbc15f76458a/6d583eb2e080a85a#6d583eb2e080a85a> -- release anouncement


L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/5707e93ba2942868/d8085652bc85fe9d#d8085652bc85fe9d> -- live CD



=head3 PXPerl meets Pugs
 	
Grégoire Péan announced that he has added Pugs binaries to his windows distribution of Perl.  Pretty cool.  Autrijus innocently asked him to take on the slightly larger task of producing binaries of Parrot too, so that Pugs could be at its more powerful.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/a28bef89de27ef42/a4797d46952f98eb#a4797d46952f98eb>




=head2 Parrot

Wow did you see how I mentioned Parrot before going into.  That was like an awesome transition.  My high school english teachers would be so proud...

=head3 character classes

Patrick wants character class opcodes of the form find first and find first not.  Leo pointed him to some hysterical raisins who might help.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7fc88a464c05c257/a2cb3834be55832d#a2cb3834be55832d>



=head3 PGE on MinGW

François Perrad fixed a problem with building PGE on MinGW.  Patrick applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/998bbdec6ed1c605/dc9f6a1c35fb2475#dc9f6a1c35fb2475>



=head3 PIO_fdopen return value
 	
Luke Palmer both intoduced me to the wonderfully cute phrase "untodid" and provided a patch making PIO_fdopen return NULL when give bad flags.  Leo applied the patch, but Melvin Smith warned that this might be a bad idea.  Silence after that.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/1855df6e00ad2066/0955bdf6c42d7ad5#0955bdf6c42d7ad5>



=head3 embedding initialization

Jeff Horwitz was having trouble embedding PIR into C.  Leo provided some pointers.  Jeff was happy.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a639642be132a3ed/340eb5f582823fbc#340eb5f582823fbc>



=head3 Test::Builder updates

Previously, Michael G Schwern announced an update to Test::Builder.  chromatic asked if it was worth the upgrade.  Michael replied probably, but I don't think anyone has acted on it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/cfe99da639662579/4f4b690aad4b7085#4f4b690aad4b7085>



=head3 miniparrot

Robert Spier created a miniparrot at Bernhard Schmalhofer request.  This miniparrot does not replace our make system, but it does make our website less camel centric.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/32acc707df5678be/a02606ff9a675e14#a02606ff9a675e14>



=head3 Autrijus gets the commit bit

Leo, Autrijus, and Chip had one of the nerdiest conversations ever.  The summary of which is that Autrijus gets commit priveledges for Parrot.  The general consensus was that he was too productive in Haskell and we needed to hobble him with a real mans language like C.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8c9fba41dfdb3f3d/4ff623e3cd504a1f#4ff623e3cd504a1f>



=head3 Parrot 0.2.0 "NLnet"

Leo announed the release of Parrot 0.2.0.  This one didn't seem to make it to slashdot.  Kinda sad, cause I always get a warm feeling when I know about stuff before /.  Oddly, google groups seems to have lost the email.


=head3 really make realclean

make realclean failed to find a few files.  A flaw forcefully fixed by Jerry Gay.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/aa874e35b6f28552/18f381f84fa2936d#18f381f84fa2936d>



=head3 load_bytecode shouldn't segfault

Bob Rogers made it not.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e10e881681cc12bb/033a9daa09e266dc#033a9daa09e266dc>



=head3 tell me sweet little lies

Patrick put out a request for a rudimentary set of lies and damn lies.  People are welcome to provide benchmarks too.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/292d8031e69aa7d4/c631eba65d3914ee#c631eba65d3914ee>



=head3 Parrot Panic

Leo found that parrot was panic during start up.  He rolled that patch back.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/f60ca9f6570a9f60/0e347dcda6994a2b#0e347dcda6994a2b>



=head3 make testr

Leo put out a request for a make test target which would invoke parrot twice, once to compile to PBC and once to run it.  Dino Morelli provided a patch.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0b023369b149e2ee/82ed1327511876c2#82ed1327511876c2>



=head3 trans test failures

Jens Rieks opened a ticket for some failing test long ago.  Now he wondered if there was a status update.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/336fe78e94f31ad3/577a01d8ece6819c#577a01d8ece6819c>



=head3 parrotcode.org update

Leo noticed that parrotcode.org needed a little loving.  Robert Spier provided it.  He also mentioned that people could provide their own patches for it against L<https://svn.perl.org/perl.org/docs/live/parrotcode/>.  Now is your chance to contribute to parrot's public face.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/bc41c57d2f7a4d71/0e6d70a3111e7708#0e6d70a3111e7708>



=head3 runtime/parrot/library search

Jonathan Scott Duff wondered why runtime/parrot/library wasn't in parrot's search paths.  Leo added it for load_bytecode.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/b1062fb6face9703/5c3eecc29c906898#5c3eecc29c906898>



=head3 on the road to a tiny parrot

Leo began down the road to miniparrot.  Creating first a parrot without a config and using that to generate a config.fpmc for parrot.  A larger parrot is then created with the config information provided.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/049e4a3c48c6274d/3c20fba58ff26540#3c20fba58ff26540>



=head3 MMD pmcs
 	
Bob Rogers posted some questions about how to work with multi subs and provided a preliminary patch.  Leo provided some answers but felt that the calling conventions should be pinned down before the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/1d987d4e9415d34a/12a8965b20f47ffe#12a8965b20f47ffe>



=head3 commit bit for Matt

Matt Diephouse was given a commit bit.  Congrats.  Leo took the opportunity to remind himself to run "make test" before committing.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ffd93a0d7541b15e/27241f1437349aa8#27241f1437349aa8>



=head3 NULL deref in real_exception

Nicholas Clark found a NULL refer in real_exception.  Leo explained that he needed to call Parrot_run_native to allocate the exception structute (and set the stack top pointer).  Nicholas didn't want to set the stack top as he was tracking some perl refcount bugs.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8614b5f46c5afef5/553050aade71547f#553050aade71547f>



=head3 PGE::Hs

Autrijus provided a patch to make PGE escape strings as expected by Haskell FFI.  Patrick suggests a slightly different approach which Autrijus took.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/df3de3fb2eeb410a/fe7da5fcfd60abce#fe7da5fcfd60abce>



=head3 Bug in Boolean.pmc

John Lenz found and fixed a bug in Boolean.pmc.  Leo applied the patch, and Juergen Boemmels provided a test.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/c807b55b5b5fccae/c607085a119c0b8a#c607085a119c0b8a>



=head3 svn revision number for releases

Andy Dougherty noticed that Configure.pl printed failed for release tarballs as they don't have .svn directories.  He changed it to print done.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/405badc06d95e7c0/cc0c17bc1121f0f7#cc0c17bc1121f0f7>



=head3 spawnw @args

Jeff Horwitz provided a patch which allows spawnw to take an array.  Leo applied it (with a brief reminder on platform specific ettiquette).

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/bf7035014666b2b9/2943dc9085cadbc7#2943dc9085cadbc7>



=head3 dynclasses build problem on Win32

Jerry Gay fixed a problem building dynclasses on Win32.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/734aeacca7a2525c/f5cb85bdab6dccba#f5cb85bdab6dccba>



=head3 basic JIT questions

Millsa Erlas had a few basic questions about Parrot's JIT.  Leo provided answers.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/db2456cee6742f2f/70b1228c1a52baec#70b1228c1a52baec>



=head3 @ANON tests and test fixes

Jerry Gay fixed some tests and added some more.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/408a3cb30102dfb8/7e35467c2a796f11#7e35467c2a796f11>



=head3 filepath manipulations

Leo put out a request for some filepath and string manipulation support in parrot.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/2db83ca25ad07b27/e8d004953498e264#e8d004953498e264>



=head3 call syntax abstraction

In a failed attempt to dewarnock himself, Leo reported his call syntax abstraction proposal.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0d1f0af755511965/28f480998102a287#28f480998102a287>



=head3 Old Tags

Nick Glencros suggested renaming (or possibly removing) some old tag files from our CVS days.  Leo was unsure about the removing option, but liked the renaming one.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3e3ea01ccb0a5b8f/66c327425726a9a4#66c327425726a9a4>



=head3 MinGW build problems

François Perrad provided a patch to fix some build problems on MinGW.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0e5de5ce8d80ad28/179f66a06c9a42b1#179f66a06c9a42b1>



=head3 omniscient debugging in parrot

Andy Bach wondered how much of Omniscient Debugging would be possibly in parrot.  Leo reasoned that it could be added with some work.  It would involve replacing all mutating vtables with special versions that store extra information to allow them to roll back.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/b664bb995e03f74a/7e3edecbf5fa176f#7e3edecbf5fa176f>



=head3 embedding/extending interface

Jeff Horwitz wondered who else was actively working on mebedding parrot.  Nicholas Clark provided a very uncertain pointer.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a3c02b85fe7dab97/0dd2d3aa6c0c6eac#0dd2d3aa6c0c6eac>



=head3 OO support in Parrot

Autrijus explained that Parrots current implementation made attribute access difficult.  Leo went further saying that he felt it was wrong.  The concensus is that Parrot needs to allow non-absolute access to attributes, so Leo did it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/2f54befe55c2801b/13f88903b1e55817#13f88903b1e55817>


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e62f9f039faa6efe/594cf52e370df2c5#594cf52e370df2c5>



=head3 config.t fails

François Perrad found that config.t fails without first doing a make clean.  His initial solution was deemed a little too quick and too dirty by Leo.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/609bfa968e2c2748/93c5d7e042370d94#93c5d7e042370d94>



=head3 find ops return for not found

Patrick provided a patch which changes the return value of find and find_not to the strings length (instead of -1) if the character does not occur.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5042d59e5340262d/36e82c42a485fbf4#36e82c42a485fbf4>



=head3 clean *_config files

Jerry Gay provided a patch to clean the _config files during make clean.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/b7edc1d5b4a79948/a195783cc90b9c74#a195783cc90b9c74>



=head3 MMD for logical ops

Leo changed the logical ops to return one of their operands as appropriate.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e6463d091600d139/af299cdf102930a1#af299cdf102930a1>



=head3 warning cleanup

Jerry Gay provided a patch to remove a warning on Win32.  Bernhard Schmalhofer applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/4f9738434ec37119/16502accf94d42c3#16502accf94d42c3>



=head3 Namespace updates?

Tim Bunce wondered whether any resolution with respect to namespaces had been reached.  Leo told him not much.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8fbcda0e4fea46bc/989bedc1fe123bba#989bedc1fe123bba>



=head3 rules questions

Dino Morelli was trying to add some unit tests when he ran into questions.  Patrick provided some answers but suggested further conversation move to p6l, which it did.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/1987b48227865162/dc17602c62d57779#dc17602c62d57779>



=head3 md5 library clean ups and speed ups

Nick Glencross posted some updates to the MD5 library.  This led to a few rounds of speading it up and comparing its speed with various other MD5 libraries.  The final result is: slower than C but MUCH faster than pure perl.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/84537d46ad68aec8/7c7b42dbc44b14eb#7c7b42dbc44b14eb>



=head3 disassemble segfaults

Bob Rogers pointed out that disassemble was sefaulting on some byte code.  Leo fixed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/d59c059249517f20/61b3155e3eaff442#61b3155e3eaff442>



=head3 s/internal (exception)/real \1/

Jerry Gay provided a patch which changed some internal exceptions to real ones.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/2d8e4d3646a48533/373a611f6b34a423#373a611f6b34a423>



=head3 failing tests

Tim Bunce reported some failing tests on OSX.  Leo fixed them.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/fd25e1240fc31a36/c6ff787f1079c944#c6ff787f1079c944>



=head3 small typo in PBC_COMPAT

Uwe Voelker provided a patch fixing a typo in PBC_COMPAT, which chromatic applied.  He also noticed that p6rules/*.t did not have plans.  Patrick welcome all updates to PGE tests.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5f95d1a73976ef8f/a73dd18bfb03a1ba#a73dd18bfb03a1ba>



=head3 t/p6rules/ws.t

Dino Morelli added some tests for p6rules.  Patrick applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/43fbda5c0bca516d/e25f37048470ebac#e25f37048470ebac>



=head3 index up bug in PGE

Jerry Gay found a bug in PGE involving escaping sequences strangely.  Leo tracked it down, and Patrick fixed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/b8ff7a2c541316df/46f720060661402f#46f720060661402f>



=head3 Parrot on Python
 	
Kevin Tew wondered what the state of Python on Parrot was.  Sam Ruby and Michal Wallace provided updates.  Hopefully it will take off again soon.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3ac1410a897a65a7/fc7d16edadaba47e#fc7d16edadaba47e>



=head3 paths with spaces need to be quoted

Ron Blaschke provided a patch to quote some paths that needed it in dynclasses.  chromatic wondered if that would break with paths that already contain quotes.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/713f7dac40d3e360/60c1fff22857df30#60c1fff22857df30>



=head3 .cvsignore
 	
Juergen Boemmels noticed that the SVN repository still contains some .cvsignore files.  He suggested removing them, but a few things need to be updated to the svn world before that can happen.  Bernhard Schmalhofer made it happen.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/6521054da9c7175e/35b62bf9ee9a9d1a#35b62bf9ee9a9d1a> -- request


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/d922b0043944172c/b7f5598c02bc4d98#b7f5598c02bc4d98> -- resolution



=head3 Null pointer deref

Adrian Taylor found a NULL pointer problem in Parrot.  Leo fixed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/135f3c5e3b6d97a1/1f5a2ab4fd84866a#1f5a2ab4fd84866a>



=head3 Parrot embedded in XSLT 2.0

Colin Paul Adams wondered how he could get information back from an embedded parrot.  Autrijus pointed him to Parrot_call_sub with a signature of "SS" (takes a string and returns a string).

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/30165dd23e622cc6/c4c507469c556412#c4c507469c556412>



=head3 thread detatch hangs on win32

Jerry Gay noticed that thread detatch was hanging on Win32.  He provided a patch to skip it so that other tests could fail in its place.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3accff3812d6da9f/036422b041a4fe07#036422b041a4fe07>



=head2 Perl 6 Language

=head3 Semantics of Coroutines

Joshua Gatcomb wondered whether coroutines could be invoked with new arguments on successive invocations or not.  Some pointed out that allowing the arguments to change is a more powerful model, but I didn't see anything definitive.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/ebb2304e24db640c/ae65c8bd8165b831#ae65c8bd8165b831>



=head3 function composition operator

Michele Dondi wondered if there was a function composition binary operator.  While one does not exist, one can be added (as was demonstrated much later by Ingo Blechschmidt.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/428c785d48667618/2ff554091f0fb10e#2ff554091f0fb10e>



=head3 initialization of state vars
		
Ingo Blechschmidt wondered how state vars and parentheses would interact.  Larry replied that his examples were probably correct.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/ded38746a879d57d/8e4420427d51b692#8e4420427d51b692>



=head3 C< ==> > automap?

Brad Bowman wondered if a single arg sub or block would automatically map when used on the sharp side of a pipe.  Luke Palmer thought this might be too much dwimmery.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/3d403aa8ff6e493e/ac666ce340cf819b#ac666ce340cf819b>



=head3 refactoring IDE
 	
J Matisse Enzer wondered if perl 6 would have strong IDE tools like refactoring supported or automated syntax completion.  Larry explained that he would like to make it possible for Perl 6 to support these things "just as Perl 1 built in all the system interfaces".

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/89fb02214da27797/8075562d8daca262#8075562d8daca262>



=head3 reduce precedence

Juerd wondered what the precedence for the reduce metaoperator was.  Luke Palmer informed him that it was listop precedence.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/31098c67d7610b76/a80524d587239256#a80524d587239256>



=head3 piping into random things

Juerd wondered about piping into various things like arrays, scalars, hashes, and filehandles.  Larry gave one of his characteristically speculative answers.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/76e3502dbafa5451/3fa6c4d58fe52fd6#3fa6c4d58fe52fd6>



=head3 That's why they call me Mister Bitterness

Juerd wondered what "complain bitterly" meant in the context of the yada operator.  Larry explained that C< ... > would fail, C< ??? > would warn, and C< !!! > would die.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/bc1df31bfa2b0ac1/ffee56c03be536be#ffee56c03be536be>



=head3 isa specifics

Stevan Little wondered how isa would act when called with junctions, nothing, classes, or instances.  Larry explained that it would act intelligently by autothreading, returning a list of all options, returning a bool, or something I didn't follow.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/5176b3ff12be2364/ac1d8dceea604062#ac1d8dceea604062>



=head3 available operators

Juerd created a somewhat lengthy list of available operators, hoping to inspire someone to come up with a good operator for block labels.  This led to a very meandering thread.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/affcbfe2b37386a9/d0e890171b91a4ab#d0e890171b91a4ab>



=head3 reduce meta operator

Some of you might be confused by my earlier meantion of a reduce metaoperator.  Larry introduced one.  Much debate ensued, but Larry seems fairly set on it.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/1ed77c281581466c/cc032c3414c33e07#cc032c3414c33e07>



=head3 override built ins
 	
Andrew Savige wondered if he would be able to redefine built in functions like read in perl 6.  Larry explained that perl 6 would give you so much rope that you could hang yourself from several tree while blowing off your own foot with it.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/ef4af74285e64feb/7f31dec5a5de054a#7f31dec5a5de054a>



=head3 opening stdout

Gaal Yahas wondered how to open stdout or a file named "-".  Larry explained that io() would have the dwimmy parts like opening stdout, while open would not try and dwim.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/be554c423ebff952/0d073403e2d9e2ab#0d073403e2d9e2ab>



=head3 adverbial blocks explained

Terrence Brannon stumbled upon the phrase "adverbial blocks" but didn't understand what it meant.  Luke Palmer provided a very clear and cogent explanation.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/44ccdfc251bb3e15/cb47e226098267a2#cb47e226098267a2>



=head3 circular dereferencing

Autrijus noticed that the autodereferncing of references would cause an infinite loop for circular refernce.  Larry recanted and decided that the full on autodrill down was not as cool as he had initially thought, but he did warn us that next week he might think it was even cooler.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/7f64391fbe1526a5/bdda0e7a23279fcc#bdda0e7a23279fcc>



=head3 scoping of $/
 	
Ingo Blechschmidt wondered what sort of scope $/ would have.  Luke Palmer replied that it would be lexical just like perl 5.  Larry corrected him pointing out that it would actually be lexical, unlike perl 5.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/10906cbd3833dfe8/c17c3cb539812c71#c17c3cb539812c71>



=head3 binding subs return values

Joshua Gatcomb wondered what binding of subs return values would do by default.  Juerd answered that it would not allow modification unless the sub were declared as an lvalue.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/9a7d2a6903d58234/133ea4e1aee20e19#133ea4e1aee20e19>



=head3 use fatal, no fatal, exceptions, and undef

Aaron Sherman wondered how various scopes fatality levels would interact.  Luke Palmer explained that you need to do 360s on the control pad while holding block.  He also provided some thorough examples.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/0bc2bfd53fb240e0/c961990fd9b8090f#c961990fd9b8090f>



=head3 xml grammar in Perl 6

A while back Juerd wrote a perl 5 script to transform the EBNF spec of XML into Perl 6 rules.  Now that Pugs might be able to support it, he suggests that it would be a good project for a brave soul.  No takers yet.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/76d4ea76b181e160/e99e0455a5a65b9f#e99e0455a5a65b9f>



=head3 mailing list indexing

Aaron Sherman posted a link to his initial version of an annotated version of the mailing list.  He asked for comments, but Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/6561aa2cc9862ea7/17956d9845658363#17956d9845658363>



=head3 prefix adverbs

Someone who posted to google groups (and got the unfortunate name mangling of arcadi.sheh...@gmail.com) asked if it made sense for C< $a =  stuff @foo, how => 'scrambled', 1, 2, 3; > to be written as C< $a =  :>how('scrambled') stuff @foo,  1, 2, 3; > or some such.  Sadly, we will never know.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/68f2f37ecdf43bc3/759611c278caea0d#759611c278caea0d>



=head3 semantics of split

Autrijus asked if he had the right Pugs was splitting correctly.  It wasn't, but it is now.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/ad8f212972168670/769c309f02b8daa5#769c309f02b8daa5>



=head3 S29: punt

Rod Adams announced that he found the real world intruding too much and was going to have to leave off his work on S29.  Sam Vilain, Aaron Sherman, and Max Maischein all volunteered to take up the effort.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/6a2d3da3e1c1d25c/cf637256c360f285#cf637256c360f285>



=head3 chomp!

Joshua Gatcomb wondered exactly what "is chomped" did.  Larry Wall explained exactly what "is chomped" does.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/4397075a85638757/e8f9bc28bf62d8d9#e8f9bc28bf62d8d9>



=head3 character classes

Patrick, based on his experience with PGE, suggested a slightly new syntax for character classes in perl 6.  Larry liked the syntax and went on to muse about other unresolved issues involving character classes.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/8d0b000a2006c805/4ad613ff400c8219#4ad613ff400c8219>



=head3 Numification of match objects

Autrijus noticed that numification of match objects made strings of digits numify to 1 (i.e. true).  He didn't like this.  Actually no one did.  So it has been changed to numify as one would expect.   After all, it can numify to 0 but true.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/1223c3f11e0a6444/e7c68ffcd90eab2e#e7c68ffcd90eab2e>



=head3 traits and properties API

Stéphane Payrard wondered when and how traits would interact with properties.  Brent 'Dax' Royal-Gordon and Larry provided answers.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/16823aec5ef20ced/cec5b69464b40e22#cec5b69464b40e22>



=head3 single element lists

Jonathan Scott Duff wondered what C< (1)[0] > would do.  Larry though that we would have to specialize ()[] to parse as (,)[].

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/89d14842806995e3/26d0e71ecf3a2add#26d0e71ecf3a2add>



=head3 Void type?

Thomas Sandlaß, Rod Adams, and Autrijus speculated about ways to deal with a Void type.  Nothing definitive came out of it though...

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/10e17e64680febd3/b313716c6e95b3a8#b313716c6e95b3a8>



=head3 uniquely identifying objects

Stevan Little wondered if there was a way to uniquely identify objects in Perl 6.  Larry pointed him to the .id and the associated =:= operator.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/09b2db1a9e7db5f9/6077664d96af973e#6077664d96af973e>



=head3 BEGIN and lexicals

Benjamin Smith wondered if BEGIN could modify lexicals that don't really exist yet.  Larry expressed the opinion that one should be able to modify compiler state in begin blocks; however, he did not answer the question of what Benjamin's example does.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/49e7c4a0ea58c70e/ff5dc221a156fbdf#ff5dc221a156fbdf>



=head3 :: vs ::: in rules

Patrick confused many people when he asked about the difference between :: and ::: at the top level of rules.  The answer seems to be that ::: will fail the entire match while :: will simply fail it at that offset in the string on which it is attempting to match.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/99f41fce83f47882/0baafe36b1533bac#0baafe36b1533bac>



=head3 negatives of junctions

Larry noticed that != and !~ will confuse english speakers when applied to junctions.  Luke noticed that defining C<$a != $b >  as C< !( $a == $b ) > works.  And tragedy was averted.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/acba3cb531632d51/81a1eeddf0fe0110#81a1eeddf0fe0110>



=head3 boxed types from builtins

Aaron Sherman worried that many built in functions return boxed types which could cause a big speed hit.  Rod Adams explained that this was necessary but optimizations would be made available.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/269675add9b4e867/bfd9ff194b555aed#bfd9ff194b555aed>



=head3 ./method

Juerd suggested using ./method to mean $?SELF.method (in an attempt to solve the long standing debate of $?SELF.method vs $_.method).  Much discussion ensued although the general response seems favorable.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/5325e618c8a13d53/b3e9bc09565e4d0c#b3e9bc09565e4d0c>



=head3 operators everywhere

Rob Kinyon noted that there seemed to be an extremely large number of operators.  He expressed concern, because he had believed that P6 was going to have a small core with moduls.  Larry explained that most of these operators were in fact generated by combining a small set of operators and meta operators in a combinatorially explosive way, giving the wonderfully lucid example of [»+^=«].  Much discussion ensued.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/59c945653fd23792/3f82db7c6ffaa285#3f82db7c6ffaa285>



=head3 BUILD and submethods

Ingo Blechschmidt wanted to be sure that all appropriate submethods would be called when they should and that only the correct one would be called when they shouldn't all be.  Larry answered that it did work as he expected.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/bc0db43280956c54/e9174e5538ded4a3#e9174e5538ded4a3> -- question about subclasses


L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/dcb6befb3e298ed6/f1afbb4dcfb70859#f1afbb4dcfb70859> -- same question but with roles



=head3 $. vs $:

Luke Palmer was having trouble understanding what the difference between $. and $: was.  Aaron Sherman prointed out a few differences according to A12.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/f29e96d82fe0cf63/b6b426ef593bb255#b6b426ef593bb255>



=head3 not 4,3,2,1,0;

Autrijus wondered what the signature for C< not > was in perl 6.  Larry explained that unlike perl 5, perl 6's not function should act like C< !<<[4,3,2,1,0] >.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/37b0c3369432ae1b/497ff7b0b8174f0f#497ff7b0b8174f0f>



=head3 multiple colons in MMD
 	
Luke Palmer caught Autrijus off guard when he pointed out that multis could have multiple levels of : each of which is less important than the last.  Larry surmised that they might not have documented this hard enough.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/1c07dcb50dcca284/e3ba8ab5be76d706#e3ba8ab5be76d706>



=head3 Nested Captures

Carl Franks started a very long thread when he noted that nested captures caused extra layers in the match array rather than counting parens like perl 5.  This led to discussion of 0 vs 1 indexing.  Discussion ensued and it was decided that $0 == $/[0] and there was much rejoicing.
 http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/7ee563a776c4282d/f6d7519e8ce9a504#f6d7519e8ce9a504

=head3 '1.28' * '2.56'

Autrijus wondered what path '1.28' * '2.56' shoudl take to arrive at 3.2768.  Larry told him that infix * used prefix + to numify non-Num args.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/a809c4f79d842213/832fa3e105a673c6#832fa3e105a673c6>



=head3 methods from roles vs classes

Aaron Sherman wants to lazily load a role but only the first time it is necessary.  Luke Palmer assured him that his example would work correctly.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/c988130fd5e548a3/66c00f93abebc818#66c00f93abebc818>



=head3 currying and defaults

Aaron Sherman, in his efforts to get up to speed on S29, wondered how currying would interact with default values.  Larry explained that default values would not be bound until the invocation of the curried function.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/bbdb12a0d4615470/a3a24b1502bda023#a3a24b1502bda023>



=head3 precedence of custom infix ops

Ingo Blechschmidt wondered how to define the precedence of custon infix ops.  Luke Palmer pointed out the looser, tighter, and equiv traits (by default it is equiv( &infix:<+> ) ).

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/82117b977c93b143/639f21ba2587a6f9#639f21ba2587a6f9>



=head2 The usual footer

To post to any of these mailing lists please subscribe by sending email to <perl6-internals-subscribe@perl.org>, <perl6-language-subscribe@perl.org>,  or <perl6-compiler-subscribe@perl.org>.  If you find these summaries useful or enjoyable, please consider contributing to the Perl Foundation to help support the development of Perl. You might also like to send feedback to ubermatt@gmail.com

L<http://donate.perl-foundation.org/> -- The Perl Foundation
L<http://dev.perl.org/perl6/> -- Perl 6 Development site
L<http://planet.parrotcode.org/> -- Parrot Blog aggregator