=head1 Perl 6 Summary for 2005-07-05 through 2005-07-12

All~

Welcome to another summary from the frog house.  A house so green it can be seen from outerspace (according to google earth).  

=head2 Perl 6 Compiler

=head3 Building Pugs Workaround

Sam Vilain posted a useful work around to the error "error: field `_crypt_struct' has incomplete type" which occurs on some systems.  Fortunately, Salvador Ortiz Garcia found a fix.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/970364a0f2f52b9e/3d87824ffe636644#3d87824ffe636644>



L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/e6246066a58d0751/ffcfa88d592a26c9#ffcfa88d592a26c9>



=head3 Pugs, Pirate. Pirate, Pugs.

Autrijus began plotting with the Pirate folks.  Thoughts include unifying PIL and PAST or possibly retargeting PIL to PAST.  Perhaps the result should be a more nautical dog... maybe schipperke.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/49f0827f81def78d/b88e8886f14b55c7#b88e8886f14b55c7>



=head3 Implicit Invocants and Pain

Larry (as will be summarized later) ruled that C< ./method > was gone.  he further ruled that C< .method > would pitch fits at either compile or run time if C< $_ =:= $?SELF > was false.  Autrijus found this quite difficult to implement.  Talk continues, my instincts tell me that this too will pass, although Larry assures us that it is absolutely permanent for at least a week.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/cb4496b1e466142b/d6a35534fbc745aa#d6a35534fbc745aa>



=head2 Parrot

=head3 Key Question

Klass-Jan Stol found that using a assigning a floating point value to a key and then using it make parrot segfault.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8c182587ef8cbc62/4c48cd30a6a3f878#4c48cd30a6a3f878>



=head3 Parrot Copyrights

Allison Randal hinted that The Perl Foundation has almost finished hammering out some legal stuff and there will soon be sweeping changes throughout the repository addressing copyright issues.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/01fc3ff8a6203ea6/ae4374d359358914#ae4374d359358914>



=head3 Character Classes in Globs

Will Coleda noted that Tcl would pass more tests if PGE supported characters classes in globs. Patrick, unable to resist the siren call of passing tests, implemented it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5e4230c5bcd0fc94/0bdb158c243fa88c#0bdb158c243fa88c>



=head3 Amber for Parrot

Roger Browne announced that he had succeed in extracting viable DNA from a Parrot encased in amber since the Jurasic age.  Either that or he release Amber version 0.2.2... not sure which.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7f12c68f90744406/667e5992eeedcd29#667e5992eeedcd29>



=head3 Leo's Branch

Leo has created a branch in SVN (branches/leo-ctx5) of his work implementing the new calling conventions.  This led to some discussion of how to deal with optional arguments.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/fb1b9a5072fcbc55/bf163135cb4a7a27#bf163135cb4a7a27>



L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/621435fc758277c1/fa477ead1d6957e1#fa477ead1d6957e1>



=head3 Leo's Branch Meets mod_parrot

Jeff Horwitz posted some observations and troubles he was having with Leo's branch of new calling conventions.  Leo warned that the branch was still young, but would gladly take test cases.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/520665e89857bff8/24115e27fd5aeb37#24115e27fd5aeb37>



=head3 Leo's Branch Meets PGE

After the initial discussion of optional parameter, Patrick updated the leo_ctx5 branch of PGE to the new calling conventions.  All tests pass.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3de317517c40bfa3/157132eab2cbe703#157132eab2cbe703>



=head3 Get onto the Bus

Matt Diephouse found a Bus Error when running languages/tcl/examples/bench.tcl.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/4fe4d8d6b23aec8e/41f4834e16082655#41f4834e16082655>



=head3 MinGW Patch Resurrection

François Perrad resurected a patch from mid June with a set of action items.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/51ac75d80345b160/99254fc869fb1f97#99254fc869fb1f97>



=head3 Scared Parrots Like Scheme

Joh Lenz posted an announcement that he had an alpha version of Chicken (a Scheme to C compiler) backending to Parrot.  Leo provided answers to some of his questions.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e7f319f6edcee5fe/88e0bd3eb7606a57#88e0bd3eb7606a57>



=head3 Bytecode vs PMCs

Matt Diephouse posted a list of questions about the place of PMCs.  Some of the core tradeoffs include: maintability, portability, optimization, duplicate implementations, and security.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/64ebf15daf416f4a/224e3552a6a356a0#224e3552a6a356a0>



=head3 make svnclean

Leo pointed out that make svnclean got removed, but that he found it useful.  Chip suggested that it be renamed make svnclobber, as it does more than just clean.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8bd8095c14224951/4b2a7f23442595b5#4b2a7f23442595b5>



=head3 pmc2c.pl Bug

Nicholas Clark found a bug in the shortcut to avoid writing a pmc dump file.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/303a65c78710702d/d277f7d8ed2d9c1f#d277f7d8ed2d9c1f>



=head3 Define "cache"

Nicholas Clark suggested that it was probably not wise to #define "cache".  So they removed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a6ccdcd2d2f1979d/2628963df14329d6#2628963df14329d6>



=head3 Parrots Getting Smarter

Leo pointed out that at least one parrot understood the concept of zero, putting it some distance ahead of romans when it comes to math.  Once the Parrots start to grow opposable thumbs, I will welcome our new Parrot overlords.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/36e9e7223850dcbe/c6e71a192649f4e8#c6e71a192649f4e8>



=head3 Leo's Branch Meets Exceptions

Leo posted two suggestions for how the new calling conventions could interact with Exceptions.  Autrijus liked the one that unifies exception handlers with the rest of calls and returns.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/4762ca5b69bec1cd/e69e85ac96c3ed6f#e69e85ac96c3ed6f>



=head3 Control Flow Graph Bugs

Curtis Rawls noted what he thought might be a bug in the compute_dominators function.  Leo confirmed that it was likely a bug.  Later he posted a note saying he was working on a new implementation for some of the CFG algorithms.  He asked for a hand, but Warnock applied.  Actually, I think I have looked at that code before.  I would help be happy to take a look Curtis.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7cdffa86f6f4ebb6/8ec31c6030b0950e#8ec31c6030b0950e>



=head3 TODO: Steal Good Ideas from Dan

Will Coleda opened a ticket suggesting that we open tickets based on some of Dan's latest posts to Squaks of the Parrot.  Remember: "talent immitates, but genius, genius steals".

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/f5db2c4bec9b285f/4c502fffd9480eab#4c502fffd9480eab>



=head3 Punie

Allison Randal wants to add Punie (a Perl 1 compiler) to svn.  Response was positive.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/fa0b911b26481df3/d3aa6dfdb0522d30#d3aa6dfdb0522d30>



=head3 Mobilizing PM groups

Will Coleda wondered if there had been any work mobilizing Perl Monger groups for the good of Parrot.  Maybe I should finally look up the Cambridge or Boston PM group...

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e09da82d02a0486a/7f74455bca561f06#7f74455bca561f06>



L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/8c891112534855f4/7ccbf32848c2e276#7ccbf32848c2e276>



=head2 Perl 6 Language

As usual in p6l land, there are a couple really long threads.  As usual in p6summarizer land, they will get short summaries.  Odd how that happens.

=head3 Conflicting Autogenerated Accessors

Last week, Stevan Little wondered what would happen with conflicting autogenerated accessor names.  Larry said they would carp as soon as they were discovered.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/35bee7deb1a4defc/f959d1b2d0c37f34#f959d1b2d0c37f34>



=head3 DBI v2

The first really long thread has to do with the next version of DBI.  I am not really a database person.  But apparently those who are have strong opinions.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/d6ccf668de28e368/5556b425d916aada#5556b425d916aada>



L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/b8d9be2e31c02600/c43179f8586e8b72#c43179f8586e8b72>



=head3 Time::Local

The next really long thread has to do with the next version of Time::Local.  I am not really a Time person.  But apparently those who are have strong opinions.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/c19bea30514933f4/3b16c5e62f1cffbe#3b16c5e62f1cffbe>



=head3 submethods

Stevan Little and Larry Wall talked about submethods, their purpose, and their interaction with the meta model.  I must say that I have only partially wrapped my head around metamodels at all.  

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/7a159cc98802b975/7eb8b200aa302aac#7eb8b200aa302aac>



=head3 SMD Considered Harmful?

Last week, Yuval Kogman conjectured that MMD should be the one true MD, as it allowed nifty extensibility.  This week Stuart Cook offered a sort of compromise.  I rather like Stuart's compromise.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/f81ec2a928ff59b7/c89f2f00d5c263de#c89f2f00d5c263de>



=head3 Dependency Injection

Piers wants to be able to have classes that inject themselves in correctly at use time based on what is actually used.  Larry commented, but one quote really caught my attention "Globals are bad only if you use them to hold non-global values".  <off topic>There is an important lesson imbedded in that quote.  We really should learn rules not to follow them blindly, but so that we understand the spirit behind them and respect that instead.  Not that I have had screaming matches with any programmers who blindly eshew globals and goto's without understanding why... </off topic> That was more of a rant then just off topic.  Oh well.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/322560d7d27fb63c/7332b80612ba1300#7332b80612ba1300>



=head3 File.seek Interface

Wolverian wondered what the seek interface would look like for handles.  Larry likes the idea of it working entirely through opaque position objects using C<`> to specify units.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/ab5aff3faacb3d55/0fabc28358cb62be#0fabc28358cb62be>



=head3 Perl6/Perl5 ~ 82%

Michael Hendricks noticed that (accrding to Text::TypingEffort).  Perl 6 requires 18% less effort than Perl 5.  He suggests that this is a bad thing for the communities wasteline.  I conjecture that perl developers will use the extra time they save for activities like running and canoeing and as a result will paradoxically lose weight from expending less effort at work.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/efafd6d6e69625ad/4006f811870dbf22#4006f811870dbf22>



=head3 Creating Value Types

Ingo Blechschmidt wondered how to create a value type.  Luke Palmer suggested using an C< is value > trait.  He then went on to speculate about mutating value traits and COW semantics.  Larry though that perhaps an C< is copy > trait was called for.  Oooh, a preposition at the end of a sentance, makes me want to occasionally split infinitives...

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/afe5ce7665d8c7cb/4d5909caa7ae0e1f#4d5909caa7ae0e1f>



=head3 OO .isa

Ingo Blechschmidt viciously lied when claiming to post a "quick" isa question.  This quickly went the way of the meta object.  I think I mentioned my take on those earlier (powerful, but ow).

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/543393430f6292d0/525e5dfe05a1bd18#525e5dfe05a1bd18>



=head3 Method Call on Invocant

The last really long thread has to do with the next chapter in the method call on self saga.  I am a bit of a method call on self person.  And apparently those who are have strong opinions.  Woth note this time is that Larry updated the current state of the world.  Now C< ./method > is gone, and C< .method > only works when C< $_ =:= $?SELF >.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/93f95d3dd9c36110/cd3de4e88dc2868d#cd3de4e88dc2868d>



=head3 Use and Require Question

Ingo Blechschmidt wondered what use and require actually do.  Gall Yahas suggested they return the last thing in the used/required file.  Larry aggreed and held that they would also return the same thing.  He also warned that %INC would probably work differently in Perl6.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/8c1270622f08e693/aad674b8d5e852ee#aad674b8d5e852ee>



=head3 User Defined Infix

Autrijus wondered if an method C< infix:<===> > would  eed to be marked as export for a script that C<use>s it to get the method.  Larry explained that the method C< infix:<===> > would be available by name, but would have to be marked as export for the syntactic sugar of C< A === B > to work.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/c4349076f6416aca/5a12927bc3af87d9#5a12927bc3af87d9>



=head3 Hackathon Notes

Autrijus posted a link to his hackathon notes.  This spawned several threads.  David Storrs tried to convince people to change subject lines, with limited success.  Much of the discussion focused on MMD and how confusing it was.  Damian Conway posted his set of 3 rules that would prevent AIs from harming humans and his set of 8 rules that would prevent MMDs from harming programmers.  Proving that MMDs are almost 3 times more dangerous than AIs.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/c189bc6a1ff45b63/6930a91ec364db48#6930a91ec364db48>



=head3 Raw Binary Data

David Formosa wanted to play with raw binary data in Perl 6.  I try and avoid raw things except sushi.  Larry suggested that this would just be a string whose maximum abstraction level was set to bytes.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/34204e4b08d29684/adb4216e9160ce7d#adb4216e9160ce7d>



=head2 The usual footer

To post to any of these mailing lists please subscribe by sending email to <perl6-internals-subscribe@perl.org>, <perl6-language-subscribe@perl.org>,  or <perl6-compiler-subscribe@perl.org>.  If you find these summaries useful or enjoyable, please consider contributing to the Perl Foundation to help support the development of Perl. You might also like to send feedback to ubermatt@gmail.com

L<http://donate.perl-foundation.org/> -- The Perl Foundation
L<http://dev.perl.org/perl6/> -- Perl 6 Development site
L<http://planet.parrotcode.org/> -- Parrot Blog aggregator
