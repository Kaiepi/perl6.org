2005-04-05=head1 Perl 6 Summary for 2005-03-22 through 2005-04-05

All~

Welcome to yet another fortnight's summary.  I shall start by summarizing the summary news summarily.  Piers contacted me noting two facts: first, that the summaries had moved to a bi-weekly schedule and, second, that the volume of mail on all lists had increased.  He offered to split the load of the summaries with me, which I gladly accepted.  Thus, the summaries will return to a weekly schedule, but Piers and I alternate writing them.  This is good news for those of you who like frequent short summaries.  To those of you who prefer infrequent long summaries, I think you are weird.  Also for those of you who like to here of chromatic's exploits in the passive voice, this is good news.

=head2 Perl 6 Language

=head3 ceil and floor

Ingo Blechschmidt wondered if ceil and floor would be in the core.  Warnock applies...  Although Unicode operators would let me define circumfix \lfloor \rfloor (although I only know how to make those symbols in tex...).  Hmmm... using tex to right Perl 6 code... interesting idea...  at least then I could figure out how to make all the special symbols.  Maybe someone should make a package for that.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/9872651345221180/dfb6e19d48233e5e#dfb6e19d48233e5e>



=head3 s/// object?

Stevan Little wanted to know if s/// could return some sort of magic object that could be poked or prodded.  Larry explain, "no".  

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/6c59b6296687b28b/ee4f77b9920d10f7#ee4f77b9920d10f7>



=head3 markup like features

Michele Dondi asked if perl 6 would have markup like features in it.  Luke Palmer asked for a more full explanation of what was meant.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/a9ed04e00bade7c0/a98a66b19415638c#a98a66b19415638c>



=head3 the many moods of C< does >

Thomas Sandlaﬂ wondered if S14 would actually be written or if tie/bless were eaten by does, enumerating the many powers of does.  Larry explained that does will probably have mutated bless and then explained the contexts under which does does each of its powers.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/2095c65253615777/846c34493a77f952#846c34493a77f952>



=head3 the many moods of C< does >

To follow up his question about does, Thomas Sandlaﬂ  wondered about is (specifically whether it stubbed or initialized its variable).  Larry explained that is would probably initiliaze its variable and explained how one could use C< is Ref > to stub but not initiliaze something.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/376a1703e186fdc7/cd926e769f641b48#cd926e769f641b48>



=head3 perl5 -> perl6 converter

Adam Kennedy dropped a line to the list about PPI 0.903, which could form a good base for a Perl 5 to Perl 6 convert.  Larry explained that he was actually using PPD (the actual Perl parser) to construct such a tool.  He also explained his approach on how he was going to do it.  Actually it is a really cool approach for those of you who like elegant design approaches, you should check it out.  I'll give you a hint, it starts by writing a glorified version of cat.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/55f891b192f20c14/83bbcb56abdc82bb#83bbcb56abdc82bb>



=head3 p5 library compatibility?

Andrew Savige wondered if p6 would maintain the interface for most p5 libraries.  chromatic almost died of fright from the suggestion.  Juerd suggested a deprecated namespace for such things.  Larry gave him a ponie instead.  Later Larry thought that perhaps a special namespace for those libraries that could be automatically converted might be appropriate.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/f92eba73771f2ea4/2bbcccff8279f3e8#2bbcccff8279f3e8>


L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/317bd71bbbdcb75b/f25e44a2a6acaac7#f25e44a2a6acaac7> -- later



=head3 importing constants and header files

Song10 wondered if there was an easy way to import constants from a module and not have to specify their full scope in the includers file.  Larry explained that p6 would have "policy" modules which would allow this.  He then began to let his mind explore the possibility of allowing these modules to return a string to evaluate in the user's scope.  Then he realized how nasty textual inclusion was in C and C++, and figured that a hygenic policy would be better.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/e689486905f15375/a66721f161fa1b8f#a66721f161fa1b8f>



=head3 giving lists more operators

Juerd constructed a table of string, integer, and list operators.  He noticed that list had blank spots where string and integer both had things.  He then suggested quite a few more operators to fill these blanks...  This morphed into a discussion of code complexity and reading code.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/5421becb49cd4d45/93d8d0a1784b26de#93d8d0a1784b26de> -- operators


L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/f17650313a30cbd2/13e063f81b8fc046#13e063f81b8fc046> -- complexity



=head3 string pain

Chip wondered what exactly set C< str > apart from C<Str> and the impact this had on Unicode support.  Larry and Rod Adams explained that C< str > specified a raw bytes view of strings and required explicit casts between different Unicode levels.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/a95fa7c746d4701a/cb333037a316bf59#cb333037a316bf59>



=head3 xx on CodeRefs

Luke Palmer wondered if the xx operator could be overloaded to repeatedly run a coderef and slap the results together.  Other liked it, but no word from on high.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/f092a633812dd0f2/968acd5602237302#968acd5602237302>



=head3 running pugs

Adam Preble had some strange problems with Pugs's make install target.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/c934ac4a3d8062fb/b2e6bc96f946f634#b2e6bc96f946f634>



=head3 maniplulation many dimensional hashes

Zhuang Li wanted to know how to manipulated hashes of unkown dimension.  Luke Palmer provided the answer.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/acceda3b5d2f187e/2ec6fd2eccb43de7#2ec6fd2eccb43de7>



=head3 Semantics of Currying

Yuval Kogman has been implementing currying in PUGS.  As such, he has found some of the corner cases that have not been well specified.  Thus he, Larry, Luke Palmer, and Thomas Sandlaﬂ delve into these mysteries.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/24aa21dd6f97b3b0/7ad67c4f07be22f8#7ad67c4f07be22f8>



=head3 multi paradigmatic perl 6

Someone named Eddie posted a fairly long message to p6l on the google groups interface suggesting that Perl 6 support delegation and other programming paradigms.  Sadly, no one told him that it already does both of those things, because nobody got his email.  Google groups does not send messages back to the list.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/4cfcd0a1d4f53443/b41f615fc1e53d96#b41f615fc1e53d96>



=head3 NB for PUGS on low memory machines

Adam Preble posted a helpful warning about installing PUGS on machines with less than 200 MB of memory.  Unfortunately he also posted it to google groups.  People should stop doing that.  Is there some way to tell google to not let them do that?

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/0af412a7054b8d13/4479115dcdc51e44#4479115dcdc51e44>



=head3 PLEAC

Tim Bunce suggested that people could add programming examples to PLEAC for Perl 6, of course they should run in PUGS if they are being released to the world at large...

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/b29d689814d0a50e/bd6ed3ba5ee17ffb#bd6ed3ba5ee17ffb>



=head3 annotating code with documentation

Chip wants to be able to document his code by attaching documentation directly to it.  This would allow for nifty introspective features.  Larry pointed out that the surrounding POD would actually be made available to the code.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/ee84f795b861a961/7df6e2459c0bead8#7df6e2459c0bead8>



=head3 typo in S03

Aaron Sherman pointed out a typo in S03.  Luke Palmer explained that dev.perl.org did not mirror the svn tree just yet.  Juerd found one too, but got the same answer.  But this time Robert Spier put in the necessary magic so that dev.perl.org would update from svn.perl.org.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/68a7e0178a8a95f7/09503722ee7bc48d#09503722ee7bc48d> -- Aaron's


L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/65be84ce6c31bbbf/f5c9381e2193c02c#f5c9381e2193c02c> -- Juerd



=head3 optimization hints

Yuval Kogman noted that Perl 6 has some ability to provide lexically scoped hints and suggested a few more thinkgs that might be hintable.  Larry opened the door for him to try and design such features.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/a89f6bf2170ebc88/27fab5f0a8dc612c#27fab5f0a8dc612c>



=head3 S29 update

Rod Adams efforts to update S29 continue to push a very large thread about things including numification of strings and various core operators.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/17969d56c1fb86e0/849d4e45300554bd#849d4e45300554bd>



=head3 string positions

Aaron Sherman wanted a more OO way to look at the OS.  Larry did not really agree but felt that one could create a proxy object which would reference all of those globals.  Also, a conversation about having units attached to numbers sprang up.  Sounds like a good module to me.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/afad6d022c082774/1c880e5b9a5d101b#1c880e5b9a5d101b>



=head3 modify and assign operators

Andrew Savige wondered if there was a complete list of operators anywhere, because he could not find ~^= (string xor) documented anywhere.  Larry explained that the assign should probably be a meta operator to allow for better extensibility

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/1813d3d7b46c1bc5/bf70c18431f210b4#bf70c18431f210b4>



=head3 p5 -> p6 guide

Adam Preble wondered if there was a basic p5 -> p6 guide.  Unfortunately he posted to google groups.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/6bf1b2d4d5ffaf32/b107fe5aac5709d2#b107fe5aac5709d2>



=head3 $_.method vs $self.method

The debate about whether .method should mean $self.method or $_.method continued.  $self is still winning.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/cf458503a5ec514f/2ea8a9d3e3e0fc75#2ea8a9d3e3e0fc75>



=head3 typo problems

It seems that Juerd has typing problems.  He wanted to know if he could form a support group.  Apparently only if he uses vim.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/f6f0b8c28f4a7e00/d89b9178125802ca#d89b9178125802ca>



=head3 renaming flattening and slurp

Terrence Brannon wants to change the name of flatten and slurp to something else.  Larry told him that this usage was unlikely to change.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/6364ee28da83e810/fe2a9bb6f846a662#fe2a9bb6f846a662> -- flatten


L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/699cf7f622b1e571/a9bb20ee75538f60#a9bb20ee75538f60> -- slurp



=head3 how read-only is read-only

Chip wondered how deep read-only-ness or is copy-itude went on arguments.  The answer appears to be shallow.  This led to a very long discussion of how much type checking would actually occur.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/4a8eb25e57148fcb/03ba459e92fde91a#03ba459e92fde91a>



=head3 pick on non-junctions

Ingo Blechschmidt wondered what pick would do on an array or a hash.  Many folk explained that it would remove and return an item or pair from the container respectively.  Larry comented that pick on a hash could be harder then it looks...

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/24e369fba3ed626e/6e6a2aad1dcc879d#6e6a2aad1dcc879d>



=head3 built in multi methods

Wolverian wondered if some of the common functions called on strings would actually be methods.  Larry answered that they would more likely be multi's to allow for easier extension.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/50079a618601b80d/e7c815b3765d8103#e7c815b3765d8103>



=head3 comparing to references

Darren Duncan wanted to know if C< =:= > was the correct operator for comparing if two variables refer to the same object.  Larry explained that it was.  This led to a debate about how easily one could deal with chains of references in Perl 6.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/a264690496f82a28/383b82ce7c84105e#383b82ce7c84105e>



=head2 Perl 6 Compiler

=head3 Pugs test failures

Will Coleda worriedly reported 115 failing subtests in Pugs.  Stevan Little explained that this was normal for between releases and was really more of a todo list than a problem.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/7ec5b9680b2e2b25/44dd1e2c65a9ec0e#44dd1e2c65a9ec0e>



=head3 Pugs darcs repo

Greg Buchholz noticed that the darcs repo for pugs has trouble staying up to date.  Tupshin Harper suggested using `darcs whatsnew --look-for-adds --summary` to find the offending files.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/403ad974f7e3295d/be5a3ad79573ae3f#be5a3ad79573ae3f>



=head3 BEGIN {} time

Autrijus wondered when BEGIN was supposed to run.  Markus Laire posted a useful summary of when the various CAPITAL things were run.  Larry confirmed Autrijus suspicion.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/7d0fcc2e85d25883/7c202ea0f1302c96#7c202ea0f1302c96>



=head3 YAML test output

Nathan Gray wondered if he should change his tests log to YAML output.  Stevan Little pointed him to Test::Harness::Straps which could collect test output and transform it.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/244ea8a4b952c9c2/71eff01bb226d6e1#71eff01bb226d6e1>



=head3 semicolons in p6

Andrew Savige found some strange behavior with respect to statement seperation in pugs.  He thought that perhaps semicolons had changed their status.  They haven't.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/c08bbb8c8ba05f23/e425757e0f39458d#e425757e0f39458d>



=head3 ugly dog meets ugly bird

Pugs r2^10 can compile p6 to imc which can be run by Parrot.  I think I speak for everyone when I say "Wow.  Nice work Autrijus.".

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/2996dd373c00a9f0/bdf1c3471a53045b#bdf1c3471a53045b>



=head3 string interpolation and various special variables

Andrew Savige noticed a could of odd corner cases for string interpolation in pugs.  This led to a discussion of which special variables (like $!, $/, and $") would continue to exist.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/4cff94d05a0f66e8/5865ad1edbec35a3#5865ad1edbec35a3>



=head3 code coverage metadata

Paul Johnson posted a list of requirements he would like to see satisfied so that one can easily generate perl 6 coverage reports.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/92946e6c221cea6e/bee7738ae13d3611#bee7738ae13d3611>



=head3 Pugs Release

As is the fashion, Pugs went through to minor releases during this two week period: 6.0.13 and 6.0.14.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/d977531c8c3c26a6/fef6c555d7f2d77f#fef6c555d7f2d77f> -- 6.0.13


L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/503f0f59d17d6de6/fc3c3dfa03be639b#fc3c3dfa03be639b> -- 6.0.14



=head3 text editor support for Perl 6

Darren Duncan suggested that it migth be a good idea for people to begin prepping their favorite text editors to handle Perl 6 syntax correctly.  Why stop at syntax?  I know I want to be able to type :perl6do in vim...

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/06170de60f15c7d1/b8af8ddd9f6668e6#b8af8ddd9f6668e6>



=head3 Makefile.pl

Darren Duncan noticed that while most things in pugs were written in Perl 5, while Makefile.PL was still in Perl 5.  He suggested that the Makefile.PLs in various modules be written in perl 6 also.  He then began work on a pugs::Makemaker module.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/b908159d1d42be9d/4f7c49cf1c4913eb#4f7c49cf1c4913eb>


L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/a54799a8447544d7/75deb16e3f23bba6#75deb16e3f23bba6> -- work begins



=head3 Pugs to become a Perl6 -> Parrot AST compiler

Autrijus explained that he was planning on steering pugs toward becoming a perl 6 -> parrot compiler which would interpret code (when parrot is not available) by mapping imc to haskel.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/a3de948450686dfb/f8bd616ed25e8ba9#f8bd616ed25e8ba9>



=head3 pugs re-org

Stevan Little suggested rearranging the pugs repository a bit.  The end result is that modules which aren't runnable in pugs (yet) should go in modules/ while those which are should go in ext/

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/7c8a2fde84a44680/cc7ccf80f1db6b9f#cc7ccf80f1db6b9f>



=head3 YAPC::NA pugs hack-a-thon

John Macdonald posted his plan for the YAPC::NA pugs hack-a-thon.  His description of the location makes me want to take time off work to go to it....

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/b7654876184c315a/e5c177b644291946#e5c177b644291946>



=head3 split semantics

Stevan Little found a bug in pugs's split.  Autrijus fixed it, but noted that he had not replicated the full, bizarre semantics of perl 5 (which come from awk).  Larry told him not to work too hard on it, as it would probably be provided through a separate function.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/bbfafdaf0f206314/bcb73c32ffd9f8f4#bcb73c32ffd9f8f4>



=head3 statement modifiers

A bug in Pugs's parsing led Autrijus to seek information from a higher authority.  Larry explained the power of statement modifiers.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/e655790aec06ff1c/b6bc7f344224557d#b6bc7f344224557d>



=head2 Parrot

=head3 move perl tests out of pmc/pmc.t

Steven Schubiger volunteered to reogranize pmc/*.t last time.  He did it, and leo applied the patches.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5d07eef5fd6cc4e8/ae7deac783274d56#ae7deac783274d56>



=head3 areas of focus

Chip, in a circumloquacious attempt to come up to speed, indirectly asked what design issues needed attention.  Leo explained the CPS issues that have been bogging down parrot of late.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/bf62dabc84b701c6/14246cc09d5e5efd#14246cc09d5e5efd>



=head3 improving mingw docs

FranÁois Perrad provided a patch improving the documentation for building with MinGW.  Leo applied part of it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/c64adac9b6b4b822/0b570c16d600dffd#0b570c16d600dffd>



=head3 moving pmc2c2.pl or pmc2c.pl

Matt Diephouse opened an RT ticket for cleaning up the file system (specifically pmc2c2?.pl).

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0cbe09585e5a3aed/75773e6add39f91b#75773e6add39f91b>



=head3 The Learned Parrot

Christian Aperghis-Tramoni reported that he has had success using parrot assembly as a teaching tool.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a5c89c1afb285fda/6de665799f024868#6de665799f024868>



=head3 performance and parrot

Falcon posted a series of questions about Parrot in a fairly general sense.  Unfortunately, since he posted it to google groups, Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/17d6d6f97b715e1c/ca0ffab9e2314369#ca0ffab9e2314369>



=head3 first MMD call

Leo posted a first MMD call which uses an MMD PMC and a fair amount of hand done calling conventions set up.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/98dbeeeefc63093c/e4d842b427760caf#e4d842b427760caf>



=head3 OpenBSD atan2 trouble

Steve Peters noticed that atan2 on OpenBSD is not quite right.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/f0304137d88751b6/7fb8c5d8b405e5ff#7fb8c5d8b405e5ff>



=head3 API change

Leo changed various packfile functions to take an Interp* argument.  This does change the embedding API, but it had to be done.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/d3e1c7eadf5f7192/71a24123fabd55b8#71a24123fabd55b8>



=head3 pmc2c2.pl cleanup 

Leo pointed out that pmc2c2.pl was not functioning correctly on all platforms.  He put out a call for interested parties.  Matt Diephouse provided a patch to clean up the internals of pmc2c2.pl a bit.  Leo applied it.  Peter Sinnott returned a $ that got lost in the shuffle, chromatic applied it.  Matt went on to add better comments.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/06a1f8e695ef1aa1/c47eb087e2a86dd5#c47eb087e2a86dd5> -- call 


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/33304f22363ae810/81b48613c09a87ee#81b48613c09a87ee> -- refactor


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/523ee2c3f024ea21/025c3cf568cdc087#025c3cf568cdc087> -- $ found


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a032216f4e4d4a71/e9221136e02bf015#e9221136e02bf015> -- comments



=head3 README.win32 update

Klaas-Jan Stol provided an update to the README.win32 directions.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/56fd45369cc73260/952fba174cef9d9a#952fba174cef9d9a>



=head3 SET_NON_ZERO_NULL

Chip wondered why parrot had a SET_NON_ZERO_NULL macro and suggested removing it.  The answer was of course speed.  On architectures with a zero null, this can be a no-op and memory can be calloced.  Otherwise it has to do something.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/9c9bf38c5ca50048/11363375f1e55224#11363375f1e55224>



=head3 PMC constants

Leo added support for .const things to imc.  Unfortunately, the GC eats them so you can't use it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ff04eefc36e9ea76/c72babeefba6f5a3#c72babeefba6f5a3>



=head3 Garbage Collection and Hash creation

Cory Spencer's LISP implementation revealed a bug in the hash creation sequence.  Leo fixed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5b6a6e14efa7b74d/cdd2e03ca8a80a7f#cdd2e03ca8a80a7f>



=head3 MD5 update

Nick Glencross provided an update to the md5 library.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/f1c260366651efd4/021b233898e21a3a#021b233898e21a3a>



=head3 tcl updates

Will Coleda has been updating tcl.  He moved the parser into a PMC.  Then he tried to add octal and hex escapes only to discover missing transcodings.  He also found missing hash functions, but Leo fixed that.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/01fb6c6708902757/7e63bfff44b38cf3#7e63bfff44b38cf3> -- parser


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/f99a9979165e08dd/fd4c8b0780abb7b6#fd4c8b0780abb7b6> -- transcodings


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/46298cb009469440/84a812d27e659c62#84a812d27e659c62> -- hash





=head3 Logging IRC

It has been suggested that we start to log IRC.  Chip suggested that this might not be cost effective as such logs are 99% dross and 1% value.  He suggests instead that people paste this good part into emails for the list.  I know that I for one, would not volunteer to summarize IRC...

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e21a3949e4760878/5efff144d804f62e#5efff144d804f62e>



=head3 segfault generating config.fpmc

chromatic (as his Linux PPC is want to do) found a bug in the build.  He fixed it, and Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e969976fbb944239/7b3eab465b44ab5a#7b3eab465b44ab5a>



=head3 Lazy, Lazy Steve

Leo added a first implementation of a Lazy PMC for Autrijus to play with.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/89a3517b473389fd/860892e9d0f5b12f#860892e9d0f5b12f>



=head3 Win32 make install

FranÁois Perrad provided a patch fixing MANIFEST.generated for Win32.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/f047aae076f5df5d/0ab639455638d725#0ab639455638d725>



=head3 Parrot on Win32

Ron Blaschke spent some time fixing Parrot on Win32, extending it to provide a shared library.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5417ba0786150aa6/43f10dcc8c2e9c58#43f10dcc8c2e9c58>



=head3 mod_parrot

Jeff Horwitz released mod_parrot 0.2.  It includes nifty features including the begining of an interpreter pool.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/837c5d3bf114b39e/a67922987c2a4498#a67922987c2a4498>



=head3 C90 cleanup

Peter Sinnott moved a few declarations further up.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/9fa5bf0bf84e783a/f0e37d095ada4337#f0e37d095ada4337>




=head3 MMD on argument count

Leo added the ability to MMD on argument count and PMC types.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/77ca782dd06c0271/4c42835ce6388c3d#4c42835ce6388c3d> -- count



L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5326320dee6c5480/6c5f23d859e7a2f4#6c5f23d859e7a2f4> -- types



=head3 documentation typos

Offer Kaye fixed a few typos.  chromatic applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/12f6f0ef9392c03d/8ebff13ccba5eb58#8ebff13ccba5eb58>



=head3 pmc freeze.t

Leo admired the tricksiness of Bernhard Schmalhofer in his freeze implementation.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/eaf8660cb92100bf/006a51cbb9bdc9b3#006a51cbb9bdc9b3>



=head3 sys.t failure on MinGW

FranÁois Perrad fixed a test failure on MinGW.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/c0e9e185719ea7ae/f818bdab1df8b19f#f818bdab1df8b19f>



=head3 builtin namesspaces issue

Peter Sinnott pointed out some failing tests.  Leo fixed them.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/6e795edbac04ef39/23e648965fbcafdf#23e648965fbcafdf>




=head3 locate_runtime_file error

Bob Rogers provide a patch to switch PARROT_TEST to 1 by default.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/c6eb0df40f37237c/6b4165aed54fd51a#6b4165aed54fd51a>



=head3 bytecode reentrancy

Nigel Sandever had some questions about how parrot and threading worked.  Melvin Smith provided the answers.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/fe139bf30260fa2e/aa1df4154c4e828a#aa1df4154c4e828a>



=head3 Pugs Questions for Parrot FAQ

Nicholas Clark noted that the question of why bother with Parrot when one has Pugs has come up recently.  The answer was put into the Parrot FAQ: speed.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/2df9d71e603fc2af/0236d8408d5c696f#0236d8408d5c696f>



=head3 Pascal for Perl

Sven Schubert wondered if people had any suggestions for how to get PAPAgei (his Pacal for Parrot compiler) up and running quickly.  Leo told him to stick with the tools he knows rather than going to far afield.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0d03005eee522bfa/7327ab601eeae744#7327ab601eeae744>



=head3 infix op proposal

Leo posted his proposal for how to revamp infix ops.  Nicholas Clark and Luke Palmer asked a few questions.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/9872731839119930/18f0a04dcae50a5b#18f0a04dcae50a5b> -- discussion


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/472630c2b0603134/0815f5def2528387#0815f5def2528387> -- more discussion



=head3 lexical pad depth

Cory Spencer wondered how to find the depth of the lexical pad stack.  Leo told him how.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/27ad49203fb127e9/860547f9152f1c15#860547f9152f1c15>



=head3 win32 exit codes

Ron Blaschke noticed that there were tests failing on Win32 because the exit code was not in the high 8 bits, but was stored directly.  Leo suggested we look to perl 5 for prior art on what to do.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/212955f9b4d3a2ad/c4c5e050ce386f1b#c4c5e050ce386f1b>



=head3 other languages on parrot

Bloves wondered if any other compilers were currently working towards targetting parrot.  I pointed him to cardinal, a ruby compiler for parrot that appears dead.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/72c0c2401220a3dd/6584831afd40324c#6584831afd40324c>



=head3 Parrot64

Adam Preble wondered if there has been any work on Parrot for AMD64.  The answer is some, but nobody told him cause he posted to google groups.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/efedec7ce9c44b2a/e5769b252a9941c3#e5769b252a9941c3>



=head3 Parrot win32-setup

FranÁois Perrad provided a patch that creates a standard binary distribution for Win32.  There was some debate over the name of the make target, but FranÁois is ready to send an updated version at Leo's command.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/54aba6b5de626a03/990013f2549886ff#990013f2549886ff>



=head3 calling convention abstraction

Leopold Toetsch proposed a calling convention abstraction that would allow Parrot to change its ABI a little more freely in the future.  Roget Hale asked a few questions which Leo answered.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/d0fe25767929714f/c1f5f17efc7b6560#c1f5f17efc7b6560>



=head3 no 0 size arrays

Ron Blaschke noticed a broken windows build, because of a 0 sized array.  Leo fixed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/63feffac3e90a07e/c2a932928fb1c823#c2a932928fb1c823>



=head3 unicode string literal assertion failed

Will Coleda discovered a failing assertion in utf8.c  Leo fixed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5583663eb8a02b6f/7d4a76dfd09b45ee#7d4a76dfd09b45ee>



=head3 NCI call signature change

Leo changed the call signature for NCI to make 'I' mean INTVAL, and 'J' mean Parrot Interpreter.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/99d4af353893d1a1/b00816d25aff741a#b00816d25aff741a>



=head3 builtin infix multis

Leo added support for MMD on infix multis.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/cf0aec53e126c012/4fbb010b37b34fec#4fbb010b37b34fec>



=head3 touch vs utime

Chip asked if there was a reason that the TOUCH variable doesn't use utime.  Michael G Schwern suggested ExtUtils::Command.  Steve Peters points out that utime will only work on existant files.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/2b4206275a5bf5b6/7c1e998cc73ecac4#7c1e998cc73ecac4>



=head3 make imcc.l for modern flex

Chip opened a TODO for updating imcc.l to modern flex.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8dc8adf441fa6805/173d69e1fc260fda#173d69e1fc260fda>



=head3 OS X build broken

Will Coleda reports that the build is broken on OS X with undefined symbols.  Leo found the cause and reverted it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5e58af5059fa2946/356b9e568eca3039#356b9e568eca3039> -- problem


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/4d012f6c68ffb933/1b1ec3ecc2e16fb0#1b1ec3ecc2e16fb0> -- solution



=head3 SVN switch

After much debate, the decision to switch from CVS to SVN has been made.  The move will be accompanied by a removal of ICU as a dependency.  Good progress has been made on that front.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8eece4a7517b63cd/91249b1c59096f12#91249b1c59096f12>


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/506f637ec0cb36cc/adc0690ef419b75d#adc0690ef419b75d> -- progress




=head3 MD5 on 64 bits

Nick Glencross has been hard at work trying to fix the MD5 library for 64 bits systems.  It would be easier if he had access to one.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7197ff1e2d33d6ec/b0533304331f2186#b0533304331f2186>



=head3 Python Version Guesswork

Ron Blaschke noticed that activestate python reports its build as 2.4 instead of 2.4.0.  He provided a patch to account for this.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/caabd5aa219eebc8/d711871c5d49df91#d711871c5d49df91>



=head2 The usual footer

To post to any of these mailing lists please subscribe by sending email to <perl6-internals-subscribe@perl.org>, <perl6-language-subscribe@perl.org>,  or <perl6-compiler-subscribe@perl.org>.  If you find these summaries useful or enjoyable, please consider contributing to the Perl Foundation to help support the development of Perl. You might also like to send feedback to ubermatt@gmail.com

L<http://donate.perl-foundation.org/> -- The Perl Foundation
L<http://dev.perl.org/perl6/> -- Perl 6 Development site
L<http://planet.parrotcode.org/> -- Parrot Blog aggregator










