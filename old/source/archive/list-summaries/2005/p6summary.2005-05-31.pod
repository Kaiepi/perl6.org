=head1 Perl 6 Summary for  2005-05-24 through  2005-05-31

All~

Welcome to another Perl 6 summary, brought to you by Aliya's new friends, Masha Nannifer and Philippe, and my own secret running joke.  Without further ado, I bring you Perl 6 Compiler.

=head2 Perl 6 Compiler

=head3 method chaining

Alex Gutteridge discovered that he couldn't chain attribute access like C< $bowl.fish.eyes.say; > in Pugs.  Later he provided his example in test form (in case anyone wanted to add it).  Maybe they were added to the test suite, maybe not:  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/896e66b5cef6d677/e8f9ca07d7b1dc6f#e8f9ca07d7b1dc6f>



=head3 Pugs link issues on Debian Sid
 	
BÁRTHÁZI András was having trouble making Pugs work on Debian Sid with perl 5 support.  Autrijus provided helpful pointers.  I assume from his final silence that the final pointer worked.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/12735f0c524edb53/bdc3f08faf125f5f#bdc3f08faf125f5f>



=head3 Pugs.AST.* compilation

Samuel Bronson wanted to speed up the compilation of Pugs.AST.* modules by turning off optimizations.  Autrijus told him that this was a core module that needed it speed, and optimizations would stay.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/70f338f3a2256f07/13d6ee45390ecb00#13d6ee45390ecb00>



=head3 Pugs.Types export list

Samuel Bronson added an export list to Pugs.Types.  Autrijus happily applied it and send him a commit bit.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/a13a6669f7555211/29fa93e63a1859e8#29fa93e63a1859e8>



=head3 export withArgs from Main

Samuel Bronson added an export to Main.  Samuel Bronson happily applied it himself this time.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/fb0bfd20062be074/89c3a26a58d0566a#89c3a26a58d0566a>



=head3 out-of-date hs-plugins

Vadim was having trouble compiling Pugs with Parrot support.  Autrijus helped him fix his problem, and there was much rejoicing.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/473d55dfb23cb82b/dfb2bf1285cb5d68#dfb2bf1285cb5d68>



=head3 chomp problem

Jens Rieks found a problem with chomp and submitted a test.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/146f4e62d950196a/b457fd0e6bac2224#b457fd0e6bac2224>



=head3 Pugs makefile issue

Grégoire Péan noticed that pugs was creating a useless Pugs.exe.bat.  Autrijus asked if he would be willing to investigate a patch.  He responded that he would put it in his queue.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/e9da852ea30990fc/11806b69b57c9a53#11806b69b57c9a53>



=head3 loop or do

Gerd Pokorra wondered why C< do { ... } > was in Pugs reasoning that C< loop { ... } while > was the correct thing.  Luke Palmer explained that C< do { ... } > was part of the with or without a postfix C< while >.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/43829f825c10b04e/80f020826b1ec28b#80f020826b1ec28b>



=head3 PxPerl 5.8.6.2 with Pugs 6.2.5 and Parrot 0.2.0

Grégoire Péan announced that the release of PxPerl 5.8.6.2 which includes Pugs 6.2.5 and Parrot 0.2.0.  This means that windows folk can test Pugs and Parrot without having to fight with compilers.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/44797562829e45bf/0ec9118d0a5df14e#0ec9118d0a5df14e>



=head3 BUILD errors

Carl Franks was confused by that handling of a named argument to a constructor.  He asked for confirmation but none was provided.  Perhaps this poor summary save him.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/c8d85c57fa0cd9d7/e8d11297c80c534b#e8d11297c80c534b>



=head3 whitespace and function calls

David D Zuhn didn't know that whitespace between and function call and its parentheses was forbidden.  Carl told him that and about the C< .() > variant which allows whitespace.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/2cd54cc42ccc7faf/e229eeb82b638977#e229eeb82b638977>



=head3 Pug's make cean issues LONG commands

Carl Franks noticed that make clean issued a command so long that it broke his nmake.  Fortunately he had a really old nmake and updating fixed the problem.

L<http://groups-beta.google.com/group/perl.perl6.compiler/browse_frm/thread/0ad94f1b41e69ee1/1db579766f53aa86#1db579766f53aa86>



=head2 Parrot

=head3 thr_windows.h with MinGW

François Perrad provided a patch fixing two compilation problems in thr_windows.h.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/081cb54a4ed511fe/67a7f34afdf97217#67a7f34afdf97217>



=head3 Parrot Slides?

Adam Preble posted a request for slides and notes on Parrot and Perl 6 for a presentation he was working on.  Many people provided links in various languages.  I usually steal from Dan's presentations when I need something like this...

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/42f822db3b2b4c7d/e40c457dca60a311#e40c457dca60a311>



=head3 Problems with Perl 5.6.1

François Perrad had a problem building Parrot with MinGW and Perl 5.6.1.  The problem was related to windows and its binary vs text distinction.  This problem will also crop up if you ever try to seek on files in windows.  Not that I have ever lost several days debugging that problem.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e4f90647f62c3661/0a9baaa67250616b#0a9baaa67250616b>



=head3 ordered hash thoughts

Leo posted his thoughts on a modification to ordered hash as adding a new element by index breaks the string hashing part of it.  Dan suggested that the ordered hash just pitch exceptions in the bad cases as it was designed to be lightweight and fast.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/86466b906c8e6e10/24a935c5c2c71aa8#24a935c5c2c71aa8>



=head3 subrules tests

Dino Morelli provided a patch adding tests for subrules to PGE.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/c600922a3fcec692/759e9ee7e172f6ad#759e9ee7e172f6ad>



=head3 python on parrot

Bloves inquired as to the state of python on parrot.  The phrasing of the question itself provided some confusion.  Michal Wallace provided a link to pirate, hoping it would help.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ea055b495d6878a2/23a59ac23ea8606d#23a59ac23ea8606d>



=head3 Resizable*Array defeats list.c

Slowly but steadily my {Fixed,Resizable}<type>Array PMCs are defeating the less consistent array implementations.  Leo offered the job of slaying list.c to any interested partied.  Jerry Gay expressed interest.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7c24021ab507253d/855d8042ec831341#855d8042ec831341>



=head3 encodings on 'char constants'

Bob Rogers wants to be able to supply an ecoding for his character constants that use C< ' >.  He also wanted to find the integer that corresponds to a character.  Leo explained how he could do the former and that C< ord > was is used for the latter.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/d71521e3e4e51418/b4da146647db3e6c#b4da146647db3e6c>



=head3 Broken Links

Fayland Lam pointed out that the links from the last summary were a little broken.  Hopefully this summary will be better.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/01803083e71e519c/05c4703b1d5e89b4#05c4703b1d5e89b4>



=head3 refcounts and DOD

Michal Wallace wondered how best to make python's refcounts work for embeding it in Parrot.  Nicholas Clark pointed out that  Parrot_[un]register_pmc would work.  Dan noted that if the python library was going to be made a parrot extension they could be noops as Parrot's DOD would do necessary work.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3f1726696d729ec9/c791d65ce745c731#c791d65ce745c731>



=head3 BigInt fixes

Kevin Tew added somes tests and fixes to BigInt.pmc.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/c581e03e878f4d8a/d5f8daa08f078f3c#d5f8daa08f078f3c>



=head3 MinGW and GMP

François Perrad provided a patch fixing GMP for MinGW.  Leo provided a slight correction which François incorporated.  Leo then applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a09a64c88328db95/b9c59f2722a5f595#b9c59f2722a5f595>



=head3 index failures

Roger Browne found a failure in the index opcode.  Leo fixed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/c81da92bc01890a5/6a6dd5a236cf22eb#6a6dd5a236cf22eb>



=head3 MinGW and GDBM

François Perrad provided a patch fixing GDBMfor MinGW. Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/33dfb7a365e4a083/fe4b4af306994134#fe4b4af306994134>



=head3 mod operation fails with negative integers

Roger Browne noticed that moding with or by negative integers could produce negative such as C<  3 mod -3 = -3 >.  Leo fixed them to provide 0.  I have that fact about C.   Not that I have ever lost several days debugging that problem either.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/8894e415b47b8d24/a2ed829260b2d8dc#a2ed829260b2d8dc>



=head3 tracing and debuging

Leo noted that debuging parrot has gotten more difficult as the number of abstractions has increased.  Is your compiler, imcc, your PMC, or parrot broken?  Maybe two or three of them?  To facilitate debugging leo suggested a debug_break opcode and a Debugger PMC.  It sounds nifty.  He also added support for lexically scoped trace and debug flags.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/f40aab493be196c2/5d73d39d325ac0df#5d73d39d325ac0df>


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e7c59253142fac87/7454a1a8c6c049f2#7454a1a8c6c049f2>



=head3 adding Unicode, Hex, and Octal escapes

Will Coleda added more complete escape sequence support to Tcl.  Matt Diephouse integrated the patch into his latest version.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/72ffc881d1d75457/f85ac2dda841e70f#f85ac2dda841e70f>



=head3 State of ParTcl

Will Coleda proudly noted that as of r8193 ParTcl was passing all tests even with gc-debug.  Much praise goes to Matt Diephouse for his cleanup of the tclparser.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3bba0dbcc811c84d/ad2ff9ee718948b2#ad2ff9ee718948b2>



=head3 strength reduction optimization

Curtis Rawls provided a flurry of patches improving parrot's strength reduction optimization.  Leo applied the patches.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0dcc4f1f752418ce/0c782ec5ad4c954e#0c782ec5ad4c954e>


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ade788b87afbcf95/7d0a8c1e93910ec4#7d0a8c1e93910ec4>


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/cf23e2282ccdfff8/2b10093bead08c4a#2b10093bead08c4a>



=head3 TODO: readline support

Leo put out a request for adding readline support to parrot.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/82f5be5069a649b7/97de5fb125248fdc#97de5fb125248fdc>



=head3 get_mmd_dispatch_type fix

Vladimir Lipsky provided a patch which fixes a bug in mmd.c.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/4533f856ba99f0ae/d00c8b88bcfbd51b#d00c8b88bcfbd51b>



=head3 unitialized variable

Vladimir Lipsky fixed an unitialized variable.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/2f5aa6c61a77aa58/40d686bdf7e7eee9#40d686bdf7e7eee9>



=head3 improved loadlib handling

Bob Rogers improved the handling of absolute paths by loadlib.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/9491a345632a0111/0a09d861dccc0018#0a09d861dccc0018>



=head3 dod sweep fix
 	
Vladimir Lipsky prevented the NULL PMC_EXT from being added to the pmc ext pool during a dod sweep.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/b3bca2ddf30f69ce/17b19f2de2b3ecd2#17b19f2de2b3ecd2>



=head3 packfile double destroy

Vladimir Lipsky fixed a problem with double destruction of nested packfiles.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3773a79fd720ee41/2cd1145fa93e777d#2cd1145fa93e777d>



=head3 Tcl autoconverts List <-> String

Tcl can autoconvert between lists and strings.  Will Coleda wondered how to implement this behavior to best support language interoperability.  Suggestions were offered, no real agreement on the best solution though.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0182c9ebfb0736bb/d531fecfb9c449a5#d531fecfb9c449a5>



=head3 TODO classification

chromatic, inspired by Pugs, added TODO classification to Parrot::Test.  He threatened to apply the patch if there were no objections...  none yet.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/952a2970ad1a2aaa/64d83aa594a8438b#64d83aa594a8438b>



=head3 HLL group support

Leo added support for loading high level language PMC groups dynamically using the C< .HLL > directive.  This will load the lib dynamically and change the return type of some ops to reflect the HLL's preferences.  It is nifty.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/75ed82ed26e93acf/a3e9619005dbeba1#a3e9619005dbeba1>


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ef24569cdcbe7d2e/515f93d5267e3f4a#515f93d5267e3f4a>



=head3 Pistol Wielding Parrot

Leo put out a request for PIR versions of the Computer Language Shootout tests L<http://shootout.alioth.debian.org/>.  This will provide a means of gauging Parrot's performance against other languages.  Kinda nifty.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/56d66dd2f4202b8c/acea6702a7bdbeb4#acea6702a7bdbeb4>



=head3 nmake v1.5 issues

Nigel Sandever was also having trouble with overly long lines and nmake.  Upgrading nmake fixed his problem too.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7280549fef836ac0/8255877b03808230#8255877b03808230>



=head3 optimizer producing bad code

Nick Glencross noticed that the optimizer was producing some bad code.  Leo fixed one of the problems, but missed the other.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e7df5b27c42f22e6/8a84a8e385b74ec1#8a84a8e385b74ec1>



=head3 Keys design

Dan posted an explanation of his original design for keys.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/0b09cf75ebded75b/a3ac293d1aaace86#a3ac293d1aaace86>



=head3 Loop improvements

Curtis Rawls provided a patch to improve the loop struct in imcc optimizer.  Leo applied it and asked if he would take a whack at reducing the resource consumption of Bill Coffman's register allocation patch.  Dan and Bob Rogers both expressed interested in speeding up the compiler.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ef896a743922b55e/91db59b1a73aee04#91db59b1a73aee04>



=head2 Perl 6 Language

=head3 hash slices

Carl Franks thought he was having trouble with hash slices.  Actually he was having trouble with the s/->/./ in his perl5 conversion.
 http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/fe42b63a7e74721b/04e18f0b56fb64b3#04e18f0b56fb64b3

=head3 Perl6 and refactoring support 

Piers Cawley resurected Matisse Enzer's thread about IDE's and tools for Perl 6.  He observed that Perl 6 might provide a great deal of support for such things.  Deborah Pickett noted that it might not be theoretically possible to parse Perl 6 safely.  Luke Palmer felt that it would not be possible given BEGIN blocks and the like.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/89fb02214da27797/0409dbac1ab2d41a#0409dbac1ab2d41a>



=head3 $*OS but OS::unix

Rob Kinyon suggested that $*OS be a class which mixes in the correct OS::class.  Then MMD could be force to do the heavy lifting.  I like this idea.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/6f589edd45ffad1e/2eb118f67d19a368#2eb118f67d19a368>



=head3 reduction junctions and cribbage scoring

Rob Kinyon wanted to uses junctions and reductions to score cribbage hands.  Unfortunately, He was using junctions as a set.  This led to discussions of the correct implementation and of a Set module that should be included in Perl 6.  I want such a set module to have a powerset function which returns the powerset of a particular set (preferably lazily instantiated).  Also, my cribbage scoring algorithm is better: (1) lay down hand (2) announce score (3) peg.  

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/35f6c8d0d9aa4371/5eaac5d52de792d6#5eaac5d52de792d6>



=head3 syntax for using perl5

Autrijus added support to Pugs for using Perl 5 modules.  This led him to wonder what the correct syntax for this actually was.  Many suggestions, but no decisions, arrived.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/8843447d9562a359/79007e1d5ba75d38#79007e1d5ba75d38>



=head3 MMD and SMD interaction
 	
Yuval Kogman wondered how MMD and SMD would interact.  Warnock applies.

=head3 making perl 6 grammars generative

aufrank wondered if perl 6 grammars could be made generative.  I would say that this does not belong in the core simply because of its niche application; however, if I were to do this I would start by using the Perl6 grammar grammar and modify the way the parse tree is used.  Sadly, aufrank posted to google groups so nobody else expressed opinions.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/3ba81c6b33ec5605/db8a961b884b69ae#db8a961b884b69ae>



=head3 Links and References

Thomas Sandlaß suggested a Link class to fill the role of auto-dereferencing variables that Luke was calling "transparent" references.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/3d1ff082d4338b04/bd268cbd6f0eb52a#bd268cbd6f0eb52a>



=head3 use syntax

Rob Kinyon wondered how exactly ranges of versions and multi language interoperability would work in Perl 6.  Rod Adams provided a few answers.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/b9b8fb5488a7da33/7e2fe8ee49ea4132#7e2fe8ee49ea4132>



=head3 Anonymous classes

Simon Cozens announced that he was having a lot of fun converting Maypole to Perl 6, then he asked how make anonymous subclasses which inherit from other classes and add new methods.  Ingo Blechschmidt provided the answers.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/a5c5cdb1a30742ce/fedb6c6b85ae2f0c#fedb6c6b85ae2f0c>



=head3 introspectable code objects

Ingo Blechschmidt thought it would be nifty if code objects were fully introspectable.  Luke thought that it would too, but felt that being able to access them at the statement level might be problematic.  I think most of what Ingo would want this for can be accomplished by macros which parse normally (or modify a block), but then munge the resulting match object approriately.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/fe1eb1f7887a4625/0a739544e951e569#0a739544e951e569>



=head3 signatures as first class types

Yuval Kogman hoped that signatures would be available as first class types in Perl 6.  Ingo Blechschmidt agreed, and Sam Vilain pointed to the start of a such a translation.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/bf516a1c019f25b1/fad6bfc4f1650717#fad6bfc4f1650717>



=head3 new and MMD

Carl Franks wanted to create a specialized on argument new using MMD.  Damian told him that his technique was a way to do it, and that BUILDALL would still be called by bless.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/8f03c86d34ed66e2/4e33e251e46fa668#4e33e251e46fa668>



=head3 code ownership and debugability

Yuval Kogman posted his thoughts on code owner ship and debugability in the age of frameworks and generated code.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/b5bc2a3c0bec2d57/c0a0aa45d2cf43cd#c0a0aa45d2cf43cd>



=head3 strongly typed containers

Yuval Kogman was wondering how to make a container class which can be strongly typed (similar to C++ templates).  Sam Villain provided a pointer to earlier threads and mentionded Haskell's Generic Algebraic Data Types.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/99b61afd411441c3/5377eb7fe6083922#5377eb7fe6083922>



=head3 constants and optimizations
 	
Ingo Blechschmidt wondered how to create constants so that the optimizer would be able to do as much as possible.  Damian suggested that macros would be one solution.  This makes me wondered if there is a way to declare a function so that a macro version for constants is also created automatically.  That would be nifty.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/d60365097dfc4f24/55b6d56db611c9c6#55b6d56db611c9c6>



=head3 Date Time formatting

Nathan Gray wondered what sort of Date/Time Formating Perl 6 would support.  Rob Kinyon suggested porting DateTime.  This certainly sounds like something that belongs in a module.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/9c02afd5621d8f36/065dacbad0d9ddcd#065dacbad0d9ddcd>



=head3 and pow, I got illuminated

After much discussion, the thread I started about reductions on empty lists has been weighed in on by @Larry.  Damian feels that it should fail as finding an approrpriate identity operator is no simple task.  Some how a discussion of modulus and division slipped in too.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/60859d989e786eec/130fd7a73ed5bb7d#130fd7a73ed5bb7d>



=head3 sub call vs MMD

Luke Palmer wanted a sanity check on sub calls vs MMD.  Larry provided an answer but did not weigh in on his sanity.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/952a0bb378deaa92/ecc8fdcafb41ff92#ecc8fdcafb41ff92>



=head3 (1,(2,3),4)[2]

People continue to be very devided about C< (1,(2,3),4)[2] > and C<@x = [1,2,3] >.  There are strong opinions on both sides about arrayrefs in array and scalar context.  I appear to be allied with the losing side.  Hopefully things will change.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/c5d553fa29733b95/d434d39327b75214#d434d39327b75214>



=head3 unicode cheat sheet

Rob Kinyon posted a request for a unicode cheet sheet so he could make his own nifty symbols.  Gaal Yahas and Sam Vilain provided pointers.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/ef172220cda5a462/710cc944649b901a#710cc944649b901a>



=head3 comprehensive list of rules tokens

Jeff Pinyan wants a comprehensive list of perl 6 rule tokens so he can create a Perl 5 module to parse them.  Much discussion ensued.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/e9cfaffbe7ce5364/2335c47b32fa6af6#2335c47b32fa6af6>



=head3 Default invocant of methods

Ingo Blechschmidt wondered if a methods Class would be allowed as  a default invocant or only instances of it.  Somehow this led Larry to musing about Class a a role than people can mixin instead of inherit from.  He confuses me.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/0d33ae0ce9a439fa/cb997504f9511ada#cb997504f9511ada>




=head2 The usual footer

To post to any of these mailing lists please subscribe by sending email to <perl6-internals-subscribe@perl.org>, <perl6-language-subscribe@perl.org>,  or <perl6-compiler-subscribe@perl.org>.  If you find these summaries useful or enjoyable, please consider contributing to the Perl Foundation to help support the development of Perl. You might also like to send feedback to ubermatt@gmail.com

L<http://donate.perl-foundation.org/> -- The Perl Foundation
L<http://dev.perl.org/perl6/> -- Perl 6 Development site
L<http://planet.parrotcode.org/> -- Parrot Blog aggregator



