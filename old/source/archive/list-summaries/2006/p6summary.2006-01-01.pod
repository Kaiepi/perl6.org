=head1 The Perl 6 summary for the week ending 2006-01-01

Another year, another summary. You might think I'm going to summarize
the events of the whole year, but it turns out that chromatic's
already done it. So in the spirit of laziness, I'll just point you at
his year end summary.

L<http://www.oreillynet.com/pub/wlg/8894>

Sadly for us all, he doesn't go into enough detail on the events of
the last week for me to go straight into the coda. I shall have to
talk to him about next year.

This week sees a big non-technical change in the Pugs camp, lots of
roadmapping and implementation in the Parrot camp, and a more and more
concrete feel of what the language is going to look like in the
perl6-language camp. 

Pretty much business as usual really.

=head1 This week in perl6-compiler

=head2 Runtime typecasting

Autrijus Tang is now Audrey Tang. Read her explanation on her
blog. Speaking personally I'm delighted that she's found the courage
to make the change and wish her the best of luck and happiness in her
new/true identity.

L<http://pugs.blogs.com/audrey/2005/12/runtime_typecas.html>

=head2 Pugs on Cygwin

There was a fair amount of discussion on getting pugs and parrot
running in the Cygwin environment this week. Last time I looked,
things were working again.

L<http://groups.google.com/groups?threadm=1d9a3f400512261400l2cf167eauc2825a1ba73b0c1b@mail.gmail.com>

=head2 This week's Pugs developments

Audrey's taken to summarizing pugs developments on her blog and to
posting digests of these posts on the list. She wrote about PIL and
Rules this week.

L<http://groups.google.com/groups?threadm=43B6DBEB.7020303@autrijus.org> -- Pugs-PIL developments

L<http://groups.google.com/groups?threadm=43B6DCB9.4060402@autrijus.org> -- Pugs-Rule developments

L<http://groups.google.com/groups?threadm=43B8229F.2030007@autrijus.org> -- Pugs-Rule: Grammar support

=head1 Meanwhile, in perl6-internals

=head2 Threading PDD?

Patrick Michaud suggested, after a question from Klaas-Jan Stol, that
it might be a good idea to create a placeholder Threading PDD (Parrot
Design Document) noting that threading hasn't been specced yet and
that a draft would be welcomed. Warnock applies.

L<http://groups.google.com/groups?threadm=20051226180251.GB18241@host.pmichaud.com>

=head2 Pugs is the official Perl 6?

Or am I putting words into Luke's mouth? Read, then decide.

L<http://groups.google.com/groups?threadm=7ca3f0160512272328w495ad815hecc409bd716fcbb7@mail.gmail.com> 

=head2 .imc or .pir? There can only be one

As part of the great Parrot reorganization, Chip declared that the IMC
vs PIR ambiguity had to be resolved. As he put it:

IMC vs. PIR

Two names enter

One name leaves

The name that left was PIR, any files you find with .imc extensions
should be cruelly laughed at while you kick sand in their faces.

L<http://groups.google.com/groups?threadm=1d9a3f400512281152u70a9726amb42b479c15be8bd0@mail.gmail.com>

=head2 Dynamic binding patch

Bob Rogers offered up a patch to implement dynamic binding of globals
for the list's consideration. Leo thought the patch was mostly sound,
but that the whole dynamic binding thing needed more thought and
infrastructure. Which is probably a broad hint to Chip and possibly
@Larry (said hint hasn't been taken yet though, well, not in public).

L<http://groups.google.com/groups?threadm=17333.25927.15166.416455@rgrjr.dyndns.org>

=head2 Smoke testing

Leo pointed everyone at the Perl Image Testing Architecture, which has
possibly the coolest acronym of any Perl project in recent years. He
thought it would be useful to use for additional Parrot platform
testing as well.

L<http://groups.google.com/groups?threadm=c52768167fd0624b66f97734cdf30d2b@toetsch.at>

L<http://ali.as/pita/>

=head2 Lots and lots of TODOs

I'm not going to enumerate them here, but Will Coleda, Matt Diephouse
and others have been adding loads of TODO entries to the Parrot
bugtracker. Which is nice.

=head2 IMCC optimizer instruction duplication and opcode write/reads

Amos Robinson wanted to know how to go about duplicating instructions
and wondered about the correct semantics of in/out/inout
arguments. Leo came through with the answers.

L<http://groups.google.com/groups?threadm=cf7d0f370512310643s31ff2cf4n2d952aeb57c31f70@mail.gmail.com>

=head1 Meanwhile in perl6-language

=head2 Iterating over complex structures

Rob Kinyon applied the 'What does Ruby do?' pattern to the problem of
iterating over complex structures. Mostly it looks good, but I'm
hoping that someone else considers applying the 'What does Smalltalk
do?' pattern as well. Subject to tuit supply, I might even do that
myself.

L<http://groups.google.com/groups?threadm=70384420512251808q3c3bc01cue2cd8af86062d9bb@mail.gmail.com>

=head2 Match objects

"Who is Match, and to what does he object?"

Sorry. Couldn't resist.

Patrick and Luke discussed the behaviour of match objects. 

=head2 (Array) introspection

Ilmari Vacklin wondered about how to introspect on the structure of
arrays and other data structures. Warnock applies.

L<http://groups.google.com/groups?threadm=1135632846.7282.4.camel@localhost.localdomain>

=head2 Array/list transformations

Rob Kinyon pointed out the difficulties of dealing with binding array
slices and other such goodies. Larry thought it wasn't really that
difficult (from the point of view of the perl programmer, things might
be different for the implementers)

L<http://groups.google.com/groups?threadm=70384420512262110u4ce4861o628e3a0b585e8bae@mail.gmail.com>

=head2 Relationship between slurpy parameters

Austin Frank wondered about the different uses of C<< prefix:<*> >> in
parameter lists and elsewhere. Stuart Cook had answers. Piers Cawley
worried about the current behaviour of C<< prefix:<*> >> in parameter
lists and about how eager its flattening should be.

L<http://groups.google.com/groups?threadm=43B332B9.2050400@gmail.com>

=head2 Building the documentation that will ship with Perl 6 and Pugs

Andrew Savige outlined some off the issues that need addressing as we
move towards releasing a properly documented Pugs, and the Perl
6. After outlining issues, he called for volunteers. Nobody commented
on the list (yet), but I hope people will be taking up the challenge.

L<http://groups.google.com/groups?threadm=20051231014706.94262.qmail@web36103.mail.mud.yahoo.com>

=head2 C<$/> and C<$!> should be C<env>

Luke proposed that we change C<$!> and C<$/> into C<env>
variables. Because almost nobody understands what an env variable is
(your summarizer had never even heard of 'em -- I think I may have to
do some serious synopsis rereading and soon) Luke explained what they
were and why they should be used in this case. The usual Sunday
Warnocking applies -- expect more detail next week.

L<http://groups.google.com/groups?threadm=7ca3f0160601011034m21da9f24h86f5888d77c0b4ad@mail.gmail.com>

=head2 Rules should be independent of evaluation strategy

Luke talked about an idea for implementing different parsing engines
that use Perl rules but without necessarily doing recursive descent
style parsing. Nicholas Clark pointed out a typo, but the basic thrust
of the article remains in Sunday Warnock land.

L<http://groups.google.com/groups?threadm=7ca3f0160601011115l25d08592o930f4cb0d065b58d@mail.gmail.com>

=head1 Acknowledgements, apologies and everything else

Happy new year everyone. I've just opened up a 4th annual subdirectory
in my summaries directory. I had hoped we'd have the real Perl 6 by
now, but these things take the time they need I guess. Things are
looking good for the future though. Here's hoping that Audrey and the
other pugs people keep up their phenomenal rate of development.

I hope that, from next week you'll be able to find Matt's summaries in
the same place as mine,
L<http://www.bofh.org.uk/articles/category/perl-6-summaries>.

=head2 Help Chip

L<http://geeksunite.org/> -- Chip still needs help.

=head2 The usual coda

If you find these summaries useful or enjoyable, please consider
contributing to the Perl Foundation to help support the development of
Perl. 

L<http://donate.perlfoundation.org/> -- The Perl Foundation

The Perl Foundation Blog is an excellent source of news about the Perl
Foundation's activities.

L<http://blog.perlfoundation.org/> 

Planet Perl Six is a handy news aggregator of several Perl 6 related
sources. 

L<http://planet6.perl.org/>


L<http://dev.perl.org/perl6/> -- Perl 6 Development site

Check out my website, it's lovely.

L<http://www.bofh.org.uk/>

Vaguely pretty photos by me can be found at:

L<http://www.flickr.com/photos/pdcawley>
