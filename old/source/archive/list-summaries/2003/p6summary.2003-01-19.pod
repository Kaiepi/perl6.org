=head1 The Perl 6 Summary for the week ending 20030119

Summary time again, damn but those tuits are hard to round up. Guess,
what? perl6-internals comes first. 141 messages this week versus the
language list's 143.

=head2 Objects (again)

Objects were still very much on everyone's mind as the discussions of
Dan's initial thoughts about objects in Parrot continued. Jonathan
Sillito put up a list of questions about Dan's original message which
Dan answered promptly. Down the thread a little Dan mentioned that he
hoped Parrot's objects would serve, reasonably unmodified for a bunch
of languages (ie, he hoped that there wouldn't be a requirement for
PythonRef/Attr/Class/Object etc), Chris Armstrong thought that, given
what Dan had outlined so far, that wouldn't be straightforward. Dan
thanked him for throwing a spanner in the works, asking for more
details which Chris provided. 

Meanwhile Jonathan had some supplementary questions... Hmm... doing
this blow by blow will take forever. Suffice to say that details are
being thrashed out. At one point Dan's head started to spin as
terminology mismatches started to bite, leading Nicholas Clark to
suggest an entirely new set of terms involving houses and hotels (but
with some serious underpinnings).

L<http://groups.google.com/groups?threadm=a05200f00ba44a84de6d8%40%5B63.120.19.221%5D> -- thread root, from last week.

L<http://groups.google.com/groups?threadm=OFEPJACOCOPCBJCNJKDLGEGGCAAA.sillito%40cs.ubc.ca> -- Jonathan's questions

L<http://groups.google.com/groups?threadm=20030115023751.GE31014%40Radii> -- Chris Armstrong throws a spanner

L<http://groups.google.com/groups?threadm=20030115204030.GA276%40Bagpuss.unfortu.net> -- Nicholas Clark tries
for a monopoly on silliness

=head2 Optimizing and per file flags

Nicholas Clark wrote about requiring the ability to adjust compiler
optimization flags on a per file basis (brought up by Dan on IRC
apparently) and proposed a scheme. Quote of the thread (and quite
possibly the year so far): "When unpack is going into an infinite loop
on a Cray 6000 miles away that you don't have any access to, there
isn't much more you can do." Thanks for that one Nick.

L<http://groups.google.com/groups?threadm=20030112154536.GI288%40Bagpuss.unfortu.net>

=head2 The draft todo/worklist

Dan posted his current todo/worklist, which he described as
"reasonably high level, and a bit terse". I particularly liked the
last entry "Working Perl 5 parser". Surprisingly, there was very
little discussion, maybe everyone liked it.

L<http://groups.google.com/groups?threadm=a05200f04ba47d7050beb%40%5B63.120.19.221%5D>

=head2 Parrot Examples

Joe Yates asked if we could add a F<helloworld.pasm> to
F<parrot/examples/assembly>. Joseph Guhlin wondered what was so
special about

    print "Hello, world\n"
    end

that it would need a file of its own (though he did forget the C<end>
in his post, and segfaults are not really what you want in sample code).

L<http://groups.google.com/groups?threadm=5.1.1.6.0.20030112103417.0251d2e0%40mbox.spacespa.it>

=head2 Thoughts on infant mortality (continued)

Jason Gloudon posted a wonderfully clear exposition of the problems
facing anyone trying to implement a portable, incremental garbage
collector for Parrot which sparked a small amount of discussion and
muttering from Dan about the temptation to program down to the metal.

L<http://groups.google.com/groups?threadm=20030113162121.GA978%40gloudon.com>

=head2 Operators neg and abs in core.ops

Bernhard Schmalhofer posted an enormous patch adding C<neg> and C<abs>
operators to core.ops. There were a few issues with the patch so it
hasn't gone in yet and an issue with what underlying C functions are
available reared its head too.

L<http://groups.google.com/groups?threadm=rt-20298-48537.11.3214103549667%40bugs6.perl.org>

=head2 The C<eval> patch

Leo TE<ouml>tsch seems to have spent most of the week working on
getting C<eval> working and he opened a ticket on rt.perl.org to track
what's happening with it. The response to this can be summarized as
'Wow! Fabulous!'.

Once more, for Googlism, Leopold Toetsch is my hero.

L<http://rt.perl.org/rt2/Ticket/Display.html?id=20315>

=head2 Pretty Pictures

Mitchell N Charity posted some pretty pictures that he'd generated
with doxygen and graphviz. Most of the responses to this suggested he
use different tools. Ah well.

L<http://groups.google.com/groups?threadm=200301160129.h0G1TYu26543%40vendian.org>

=head2 Solaris tinderbox failures

Andy Dougherty created an RT ticket for the Solaris tinderbox, which
have been failing with the delightfully useful 'PANIC: Unknown
signature type" and wondered if things could be fixed up to be a
little more informative. Apparently it was as issue with Leo's
recently checked in eval patch. So Leo fixed it.

L<http://rt.perl.org/rt2/Ticket/Display.html?id=20374>

=head2 Parrot compilers

Cory Spencer wondered about how the current compilers that target
parrot work, noting that they seem to be duplicating a good deal of
labour, and wondered if anyone had worked on a gcc like framework with
a standardized Abstract Syntax Tree (AST). Everyone pointed him at
IMCC. Gopal V also pointed out that, given the variety of
implementation languages (C, Perl, Parrot...) sharing effort between
the sample languages would be a little tricky, and mentioned his work
on TreeCC (an AST manager).

L<http://groups.google.com/groups?threadm=Pine.LNX.4.44.0301171900500.8414-100000%40okcomputer.antiflux.org>

=head2 F<ook.pasm> eval

Leon Brocard had problems getting the eval based Ook implementation
working. It turned out to be a problem with Ook's C<make test> using
parrot instead of IMCC.

L<http://rt.perl.org/rt2/Ticket/Display.html?id=20400>

=head1 Meanwhile, in perl6-language

The language list was a little fractious this week; I get the feeling
that we're spinning our wheels slightly at the moment

=head2 Array questions

Piers Cawley thought that C<< my $b is $a >> would be a compile
error, but Michael Lazzaro pointed out that that would mean that 
C<< my %data is FileBasedHash($path) >> would also be a error. Damian
pointed out that they shouldn't be compile time errors, but there
would be no compile time type checking.

L<http://groups.google.com/groups?threadm=m2k7h881wv.fsf%40TiBook.bofh.org.uk>

=head2 L2R/R2L syntax. Again.

Okay, cards on the table here, I'm getting really, really fed up with
this thread. This week it was the monster that ate perl6-language. And
how. 

We revisited the Unicode argument (Larry has said that Perl 6
I<will> have Unicode operators, some people don't like it, others
(including me) aren't keen. Nobody came up with any original arguments
this week). 

Sarcasm was employed (and missed).

Michael Lazzaro brought up Perl 5's special case syntax for functions
prototyped with block arguments which sparked some slightly heated
discussion. Damian had some words of wisdom on this subject. 

L<http://groups.google.com/groups?threadm=CAFE3022-2A4D-11D7-B2B5-00050245244A%40cognitivity.com> -- Michael
Lazzaro on block syntax

L<http://groups.google.com/groups?threadm=3E28B608.3070700%40conway.org> -- Damian talks sense

Later in the thread, Damian clarified his explanation of how the
proposed C<< ~> >> and C<< <~ >> operators would work in response to
Buddha Buck's excellent summary of his understanding of them. If
you're taking part in this monster thread I strongly suggest rereading
both of these messages, they're excellent. The subthread from Damian's
clarifications led on to a discussion of multimethods that's worth
looking at too.

L<http://groups.google.com/groups?threadm=3E2853E1.2070102%4014850.com> -- Buddha Buck's summary

L<http://groups.google.com/groups?threadm=3E288384.6000403%40conway.org> -- Damian's clarifications

=head2 Larry's state of health and employment

Damian mentioned that "We should bear in mind that Larry has had some
health issues.  And that he's currently unemployed with four children
to support.  Other matters are taking precedence at the moment." Get
well soon Larry.

This led to a discussion of whether the Perl Foundation would be continuing its
grant to Larry in 2003 (apparently not). (The L<advocacy@perl.org>
list is supposedly the right place to discuss this further but I'm not
yet a member.)

L<http://groups.google.com/groups?threadm=71BEC0D4E1DED3118F7A009027B12028034C8B79%40EXCH_MISSION>

=head1 Who's Who in Perl 6?

=over

=item Who are you?

Melvin Smith. I work for IBM. Former Linux hacker.
My education is Computer Science. I am happily married.

=item What do you do for/with Perl 6

Wrote various pieces of Parrot, including continuations (woo woo!),
IMCC, and Cola as well as heckle Dan on IRC any chance I get.  Sadly,
my contributions are fragmented and sparse, until I no longer have to
work for a living.

=item Where are you coming from?

Country boy from Georgia. I have a 4x4 truck and a dog. Perl is my
favorite language because it has made possible many days of finishing
work early to play golf, and I love WOW-ing Java programmers.

=item When do you think Perl 6 will be released?

In digestable form, December, 2003. However, if the Raelians can
clone Leopold TE<ouml>tsch by July, then August might be possible.

=item Why are you doing this?

Solely to learn new things. There is no better way to learn how to
write a compiler than to write one badly. If Perl6 never arrives,
I'll be satisfied by what I accomplished.

=item You have 5 words. Describe yourself

Intense, stubborn, dedicated, happy and kind.

=item Do you have anything to declare?

Yes. Treat people on the Net just like your friends and coworkers.
They just might be, one day.

=back

=head1 Acknowledgements

Well, this set of acknowledgements may look slightly different than
usual. This morning we had one of I<those> meetings... If you've ever
worked for a dot com you know the type;  the whole company got called
into a conference room that was two small at about two minutes notice
and the boss spent 10 minutes umming and ahhing through a speech about
retrenchment and cost cutting and... um... downsizing. 

So, it looks like I'm about to become a member of the Copious Free
Time club. I would take this opportunity to beg for a job, but if you
do have jobs to offer Perl programmers Larry and Dan may be more
useful to you. 

Returning to your normally scheduled acknowledgements, many thanks to
Melvin Smith for his answers to the Who's Who questionnaire. The
answer queue is empty again so unless someone else sends some answers
Who's Who will be on hiatus for a while. Send your answers to
L<5Ws@bofh.org.uk>

If you appreciated this summary please consider one or more of the
following options:

=item *

Send money to the Perl Foundation at
L<http://donate.perl-foundation.org/> and help support the ongoing
development of Perl.

=item * 

Get involved in the Perl 6 process. The mailing lists are open to
all. L<http://dev.perl.org/perl6/> and L<http://www.parrotcode.org/>
are good starting points with links to the appropriate mailing lists.

=item *

Send feedback, flames, money and or the complete Tarbell Course in
Magic to L<p6summarizer@bofh.org.uk>.

=back

The fee paid for the publication of these summaries on perl.com is
paid directly to the Perl Foundation (but given my current
situation I may be reconsidering that.)
