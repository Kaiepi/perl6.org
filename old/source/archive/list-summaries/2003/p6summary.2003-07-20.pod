=head1 Perl 6 Summary for the week ending 20030720

Welcome back to an interim Perl 6 Summary, falling as it does between
two conference weeks; OSCON and YAPC::Europe. For reasons involving
insanity, a EuroStar ticket going begging, and undeserved generosity I
shall be bringing my conference haul up to 3 for the year. Yay me! Now
if I can just finagle a talk into the schedule I will have spoken at
all three too. I'll certainly have heckled at all three...

=head2 The State of the Onion

Tim Howell wondered if Larry's State of the Onion address to OSCON
would be available anywhere. Robert "White Camel" Spier didn't rest on
his laurels, but posted a link to Larry's slides and
transcript. Chromatic popped up with a different link, which neatly
combines slides and transcript. However, they both lack the funny
balloon pony which I gave Larry just before the talk. Maybe there will
be video later.

L<http://groups.google.com/groups?threadm=3B1351035BBCE045831FCFDD4F4EC92D044C7F%40sonofexchange.fefcful.org>

L<http://www.perl.com/pub/a/2003/07/16/soto2003.html>

=head2 A Small Perl Task for the Interested

A few weeks back, Dan asked for volunteers to improve Parrot's build
system. Lars Balker Rasmussen stepped up to the plate and offered a
simple wrapper. Josh Wilmes seems to be somewhat sceptical about the
whole endeavour, pointing at F<libtool> as an illustration of the
size of the problem.

L<http://groups.google.com/groups?threadm=0fptkdo04c.fsf%40laphroaig.balker.org>

=head2 env.pmc

Parrot is in the process of getting an C<env> PMC, for accessing
environment variables. Dan and Leo's discussion of the patch took in
iterators and the wisdom of caching values. In the end, Dan prevailed
and the environment PMC doesn't cache values.

L<http://groups.google.com/groups?threadm=200307110809.h6B89s728289%40thu8.leo.home>

=head2 Dan on threading

"Yes, [there is some plan of how threading will work in
Parrot]. (Though there's some disagreement [as] to the solidity and
sanity of the plan)"

Dan went on to outline the plan.

L<http://groups.google.com/groups?threadm=a05210602bb38ce4499f5%40%5B63.120.19.221%5D>

=head2 Event handling

Event handling appears to be the topic of the week. The consensus
seems to be that getting it right is hard. Lots of people offered
constructive suggestions and/or problem cases. I sat on the sidelines
and trusted them to get it Right (a strategy which seems to pay off
remarkably often, thankfully).

Damien Neil was rather less sure of the wisdom of Parrot's events and
asynchronous IO model, arguing for a system based on threading. Dan
was unconvinced. I don't think Damien was convinced either.

L<http://groups.google.com/groups?threadm=200307150815.h6F8FvS29109%40thu8.leo.home>

L<http://groups.google.com/groups?threadm=a05210608bb3cacd7c15e%40%5B63.120.19.221%5D>

L<http://groups.google.com/groups?threadm=a05210604bb3c7f592ef5%40%5B63.120.19.221%5D>

=head2 IMCC sub names are not labels

Luke Palmer had some problems with using continuation passing style
subroutines in IMCC. Leo initially pointed out that IMCC didn't
support CPS, then he fixed it so that it did (sort of, the user still
has to do a chunk of the work, but sometimes that's a good thing).

In an example of synchronicity, Will Coleda had a similar
problem. Leo's fix helped him too, and he went off to continue
hacking on TCL. (It helps me too, I have this cunning plot you see...)

L<http://groups.google.com/groups?threadm=ygc1xwsw4nx.fsf%40babylonia.flatirons.org>

=head2 More on targeting GCC

In last week's summary I wondered what Tupshin Harper was talking
about when he suggested emulating a 'more traditional, stack-oriented
processor'. This week, Tupshin wished that 'people had the decency to
tell me how insane [the idea] is'. Dan obliged, telling Tupshin that
he was insane (but he did it with a smile). 

The problem boils down to GCC's assumptions about the 'shape' of the
stack. GCC assumes a conventional, contiguous area of stack memory
filled with stack frames. Parrot assumes a garbage collected chain of
continuations, which is about as far as you can get from GCC's
beliefs.

L<http://groups.google.com/groups?threadm=3F148CF0.8040801%40tupshin.com>

=head2 Parrot_sprintf not recognizing 7 in precision

mrnobo1024 posted a patch to fix a minor niggle with
Parrot_sprintf. Leon Brocard applied it.

L<http://groups.google.com/groups?threadm=rt-23005-60977.8.97351447008035%40rt.perl.org>

=head2 Problems with new object ops

Dan has started adding real classes and objects to Parrot. (Yay!)

Simon Glover found some bugs. (Not entirely unexpected)

Simon also sent in a patch fixing the bugs. (Yay! Yay! and thrice
Yay!)

L<http://groups.google.com/groups?threadm=Pine.GSO.4.43.0307162222430.28483-100000%40egg.amnh.org>

=head2 The big core.ops split

Brent Dax has started work on splitting core.ops up from being the
second largest file in the Parrot distribution (108k) into a total of
10, rather more narrowly defined .ops files. Benjamin Goldberg
wondered if this would be a good time for tidying up the parrot
directory structure (at the very least, he called for moving the
source files into a F<src> subdirectory).

Dan asked for a volunteer to rough out a move plan coving which files
move where and what the new directory structure would look like,
which would allow the CPAN jockeys to rearrange things in such a way
that the various files remember their histories.

L<http://groups.google.com/groups?threadm=000f01c34d73%244c2951e0%242a01a8c0%40brent>

=head2 Copyrights

Josh Wilmes posted a monster patch to unify the various copyright
notices attached to the files in the parrot distribution. Everything
is now (correctly) copyrighted by the Perl Foundation.

L<http://groups.google.com/groups?threadm=rt-23064-61526.13.0744805883565%40rt.perl.org>

=head1 Meanwhile in perl6-language

Somebody needs to set an Exegesis among the pigeons. There's all of
14 messages in there, and almost all of them are discussing the
semantics of aliasing an array slice.

L<http://groups.google.com/groups?threadm=3F186F40.AF8BE6BB%40hotpop.com> -- Alias those slices

=head2 Parsers with Pre-processors

I didn't quite understand what Dave Whipp was driving at when he
talked about overloading the C<< <ws> >> pattern as a way of doing
preprocessing of Perl 6 patterns. I didn't understand Luke Palmer's
answer either. Help.

L<http://groups.google.com/groups?threadm=20030718051146.95342.qmail%40onion.perl.org>

=head2 Protocols

Luke Palmer's been toying with Objective-C (And why not, it's a nice
language) and would like Perl 6 to steal Objective-C's
protocols. (Objective C Protocols are a little like Java's interfaces,
but nicer.) I'm waiting for him to latch onto the idea of Categories
which are Objective C's way of adding methods to a class. At runtime.

Discussion of Luke's proposal centred on a couple of his peripheral
points, nobody's yet addressed his main point (but it looks like a
decent idea to me).

L<http://groups.google.com/groups?threadm=ygck7aeahch.fsf%40babylonia.flatirons.org>

=head1 Acknowledgements, Announcements and Apologies

First of all, I plead insanity for my mistake of last week's
summary. PONIE does not stand for 'Perl On New Internal Architecture',
it obviously stands for 'Perl On New Implementation Engine'. I'm
very, very sorry and I'll try not to do it again.

Secondly, an announcement, I've started one of those punditry/bloggy
things. It's at L<http://www.bofh.org.uk/> (Snappy URL
eh?) and it's called 'Just A Summary'. I'm expecting it to
concentrate on Perl and Perl 6 related issues, but at the time of
this writing I've only got two 'real' articles up there so anything
could happen.

As ever, if you've appreciated this summary, please consider one or
more of the following options:

=over

=item *

Send money to the Perl Foundation at
L<http://donate.perl-foundation.org/> and help support the ongoing
development of Perl.

=item *

Get involved in the Perl 6 process. The mailing lists are open  to
all. L<http://dev.perl.org/perl6/> and L<http://www.parrotcode.org/>
are good starting points with links to the appropriate mailing lists.

=item *

Send feedback, flames, money, requests for consultancy, photographic
and writing commissions, or an apple 23" Cinema Display to
L<p6summarizer@bofh.org.uk> (One of these days that begging request
will work, and I'll be flabberghasted).

=back



