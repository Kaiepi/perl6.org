=head2 The Perl 6 Summary for the week ending 2004-05-09

Ooh look. Stuff's been happening in perl6-internals again. Will wonders
never cease?

=head2 Building NCI by default

Bernhard Schmalhofer posted a patch to turn on building F<libnci.so> by
default so that the tests in F<t/pmc/nci.t> would get run on more
builds by default. Leo Tötsch applied them and sat back to see what
broke. He, Nicholas Clark and Andrew Dougherty went on to have a
discussion about when dynamic loading may not be available (Did you
know that Crays don't do dynamic loading?) or desirable. 

Various OSes broke, and appropriate patches were created and
applied. 

L<http://groups.google.com/groups?selm=rt-3.0.9-29257-86491.15.10015674031@perl.org>

=head2 MMD and bytecode implementations

There was some debate on how register saving should be handled when
doing multi method dispatch to operators that end up with an
implementation in bytecode. I was involved in this discussion and I'm
still busy arguing my corner. So, rather than abuse this particular
soapbox with a partial (as in 'not impartial') summary, I'm just going
to point you at the root message of the thread.

L<http://groups.google.com/groups?selm=a06100502bcb7f7775cfc@[10.0.1.3]>

=head2 Embedding and the stack

Dan ruled on PMCs that live outside parrot, and on calling into parrot
from the outside. Brent Royal-Gordon implemented a 'proof of concept'
that got applied pretty quickly. Nicholas Clark wasn't entirely
convinced that everything in the garden was lovely, but we're currently
in 'suck it and see' mode.

L<http://groups.google.com/groups?selm=a06100501bcbc0a646eeb@[10.0.1.3]>

=head2 The ongoing saga of cygwin

Cygwin had all sorts of problems this week, with ICU, with NCI and (no
surprise really) garbage collection. Joshua Gatcomb acted as Leo's eyes
and hands during an extended bug hunt which ended with all tests
passing and parrot running pleasingly quickly on the cygwin platform.

L<http://groups.google.com/groups?selm=a06100503bcbc137c9093@[10.0.1.3]>

L<http://groups.google.com/groups?selm=3hdzmvl8344r$.1hkuxsnjge3es.dlg@40tude.net>

L<http://groups.google.com/groups?selm=20040504135510.85073.qmail@web60801.mail.yahoo.com>

L<http://groups.google.com/groups?selm=20040506162006.90350.qmail@web60806.mail.yahoo.com>

L<http://groups.google.com/groups?selm=20040507160212.6232.qmail@web60802.mail.yahoo.com>

L<http://groups.google.com/groups?selm=20040507161245.99916.qmail@web60810.mail.yahoo.com>

=head2 NCI Nested struct access broken

Leo on chromatic tracked down a bug with accessing nested structs when
using the Native Call Interface.

L<http://groups.google.com/groups?selm=rt-3.0.9-29333-86684.19.0522834728947@perl.org>

=head2 Async IO notes

Dan dropped a few notes on how Parrot's asynchronous IO was going to
work. 

L<http://groups.google.com/groups?selm=a06100502bcbd6e4574bc@[172.24.18.98]>

=head2 The linker TODO

In another of his TODO tasks for the interested, Dan asked for someone
to tidy up the parrot link stages so that the various parrot libraries
were rather less promiscuous about exporting symbols. The problem's not
solved yet, but it's being worked on.

L<http://groups.google.com/groups?selm=a06100500bcbd3cf3e5d8@[10.0.1.3]>

=head2 Towards a final events design

Dan's working on the design Parrot's event and IO system and he had a
question about dealing with external events. Discussion ensued. Some of
it related to Dan's question.

L<http://groups.google.com/groups?selm=a06100501bcbd45b4f30c@[10.0.1.3]>

=head2 Return Continuations

Dan was about to implement the previously discussed return continuation
register, but Leo argued that it should be done gradually and, I think,
carried the day.

L<http://groups.google.com/groups?selm=a06100502bcbec5bb0498@[172.24.18.98]>

=head2 NCI sub call syntax in PIR

Leo's rejigged IMCC so that making an NCI call is a little easier.

L<http://groups.google.com/groups?selm=4099E558.7090302@toetsch.at>

=head2 Documentation on writing PMCs

Nicholas Clark asked after documentation on how to write a PMC. It
turns out there isn't any in the distribution, but Mike Scott has some
useful stuff on his Wiki. It seems that Real Men use the
source. Hopefully this will change eventually (soon?). 

L<http://groups.google.com/groups?selm=20040507160319.GF7052@plum.flirble.org>

L<http://www.vendian.org/parrot/wiki/bin/view.cgi/Main/ParrotDiagramsPMC>

=head2 Ponie's performing pants

Nicholas Clark reported that, now that ponie is using PMCs to handle
Perl scalars, Ponie's performance is now 'pants'. It turned out to be a
problem with Garbage Collection. The initial fix gave a massive
performance increase, but there are still issues to address. 

L<http://groups.google.com/groups?selm=20040507161600.GM7078@plum.flirble.org>

=head1 Meanwhile, in perl6-language

=head2 Returning from rules

Larry ruled on Luke Palmer's rule return proposal. Essentially the
proposal as it stood was rejected in favour of a possible new
C<succeed> keyword/macro.

L<http://groups.google.com/groups?selm=20040419070629.GA32185%luke@luqui.org>

=head2 Required named parameters never go away do they?

Dov Wasserman chimed in on the subject of required named
parameters. Larry was unconvinced by his proposal. 

L<http://groups.google.com/groups?selm=20040504085308.43740.qmail@onion.perl.org>

=head2 Specifying class interfaces with C<AUTOMETH>

Austin Hastings had some questions about C<AUTOMETH> and
C<AUTOMETHDEF>. It appears from Larry's answers that Austin had the
wrong end of that particular stick. 

L<http://groups.google.com/groups?selm=ICELKKFHGNOHCNCCCBKFEEEGCMAA.Austin_Hastings@Yahoo.com>

=head2 Named parameters vs. slurpy hash syntax

Dov Wasserman worries that named parameters and slurpy hash arguments
don't get on very well. Others disagreed.

L<http://groups.google.com/groups?selm=20040506023628.60840.qmail@onion.perl.org>

=head2 C<is rw> trait's effect on signature

Aaron Sherman pointed to an issue with the C<is rw> trait and wondered
if he was making a fool of himself. For some reason the responses
turned into a discussion of the difference between 'isa' and 'does'
relationships. In response to Aaron's question, Dan implied that Aaron
was expecting rather too much to happen at compile time. 

L<http://groups.google.com/groups?selm=1083865176.4985.88.camel@pps>

=head1 Apologies, Announcements, Acknowledgements

If you find these summaries useful or enjoyable, please consider
contributing to the Perl Foundation to help support the development of
Perl. You might also like to send me feedback at
L<mailto:pdcawley@bofh.org.uk>

L<http://donate.perl-foundation.org/> -- The Perl Foundation

L<http://dev.perl.org/perl6/> -- Perl 6 Development site
