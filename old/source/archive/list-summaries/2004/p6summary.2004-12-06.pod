=head1 Perl 6 Summary for 2004-11-29 through 2004-12-06

All~

Last week I asked for help identifying the source of a quotation.  One friendly soul suggested Alan J. Perlis, but could not find an actual attribution.  It did lead me to find a very applicable (and in my mind funny) quote from Perlis, which I will now inflict upon you all, before your regularly scheduled summary:  

When someone says "I want a programming language in which I need only say what I wish done," give him a lollipop.
		-Alan J. Perlis

=head2 Perl 6 Language

=head3 qq:i

Jim Cromie wondered if there could be a qq:i which sometimes interpolates and sometimes doesn't depending on whether the variable had been previously defined.  There was some discussion which led to the conclusion that this was just asking for strange bugs.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/b0aad9939bb2367a/1f29abcbe56bfbfe?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#1f29abcbe56bfbfe>



=head3 getters and setters

John Siracusa wanted to know if Perl 6 would allow one to expose a member variable to the outside world, but then later intercept assignments to it without actually having to switch to using getters and setters in all of the code that uses the variable.  The answer: yes, yes you can.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/bdf375ee76730b63/5a9e80e5952d2d10?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#5a9e80e5952d2d10>



=head3 « foo >>

Richard Proctor asked if he could do <<list of words».  Juerd pointed out that this had already been asked. Which brings us to the fine point, ask not Larry for he will tell you both yes and no.  Although in this case I think he said, probably...

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/01d83e4f7124a967/fbcc955466c79c95?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#fbcc955466c79c95>



=head3 flipflop operator

Juerd wondered about the fate of the flipflop.  Larry explained that while it had lost the election it was still going to work hard for you in the Senate.  Err, that's not quite right, he said that "It's leaving syntactically but not semantically.", but the new syntax has not been specified...

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/d099f2399629373a/e35a284b1e68a454?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#e35a284b1e68a454>



=head3 temp $var

Alexey Trofimenko wanted to know whether C< temp > would preserve or destroy its old value.  Larry is leaning towards the Perl 5 semantics of destroying, I think.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/4f047f2247f84647/5341da569ccf67dd?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#5341da569ccf67dd>



=head3 state vs my

Alexey Trofimenko wondered how much advice about optimizing Ruby also applied to perl.  Unfortunately, he also misunderstood the C< state > specifier.  The topic then quickly veered into what exactly C< state > does.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/878c8f7ddc47f6fd/b2febbdc269ea8e6?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#b2febbdc269ea8e6>



=head3 specifying a hash's key type

Abhijit Mahabal wanted to know if he could specify a hash's key type.  The answer is yes, but the exact syntax seems to be worth a discussion.  Luke Palmer, in his Mathematician's rage, attempted to shoot down any usage of Domain and Range, as they really should be Domain and Codomain.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/0a68ecc0a9b5813b/6cceddfaac9b6a23?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#6cceddfaac9b6a23>


L<http://en.wikipedia.org/wiki/Range_%28mathematics%29> -- wikipedia: range
Range (mathematics) - Wikipedia, the free encyclopedia

=head3 container methods

Ashley Winters wants to have syntax for calling a method on the container object rather than the containee.  Luke Palmer agreed that this was problematic.  Larry appears to be in no hurry to add more operators for this one, yet.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/5795b160190bea66/975ca916a337f524?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#975ca916a337f524>



=head3 slight discrepancy between synopses

Stéphane Payrard pointed out a small issue in some synopses.  Larry replied oops.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/e831fbff7f4853f8/1e7c0a77327dbf88?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#1e7c0a77327dbf88>



=head3 arrays, lists, iterators, functions, coroutines, syntax

Many people suggested many things about the best thing to replace the now missing C< <> > op.  I think Larry is leaning towards adding a undare C< = > op, which would do cool things.  I don't thing anything is final yet.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/cbb53159bcaed4a7/1169615c9bfdc0e2?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#1169615c9bfdc0e2> -- iterators as functions


L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/257b8e0bbed541a8/93e0c356ddf3afcd?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#93e0c356ddf3afcd> -- unary C< = > talk



=head3 Push/Pop/Pull/Monkey

Many folk voiced their dislike of shift and unshift.  I must agree with them, but they also suggested a great many alternatives, including pull/put, get/unget, and even getting rid of Push/Pop.  I must say that I really dislike that last idea, fortunately I am no alone.  Currently we are waiting for inspiration to strike.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/257b8e0bbed541a8/93e0c356ddf3afcd?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#93e0c356ddf3afcd>



=head3 Topicalization

It was noticed that C< for > might override one's topic at undesired times.  Larry rumminated about ways to solve this.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/257b8e0bbed541a8/93e0c356ddf3afcd?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#93e0c356ddf3afcd>



=head3 Required Whitespace

Rod Adams does not like inconsistent whitespace rules.  Larry explained why the existing rules really were consistent.

L<http://groups-beta.google.com/group/perl.perl6.language/browse_frm/thread/257b8e0bbed541a8/93e0c356ddf3afcd?_done=%2Fgroup%2Fperl.perl6.language%2Fthreads%3Fgvc%3D2%26&_doneTitle=Back&&d#93e0c356ddf3afcd>



=head2 Perl 6 Compilers

The lack of traffic on p6c has given me another space to abuse.  You should listen to "Soul Coughing".  If you would like to join in the fun of abusing p6c, you should submit tests.  Nothing is more abusive then stress testing ;-)

=head2 Parrot

=head3 Tuning and Monitoring

Matt S asked how much support for tuning and monitoring.  This week I exercise the awesome powers of the summarizer and invoke the mighty Warnock's Dilemnia.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ab18b616e2a89b3b/6bedca9a038ed1d9?_done=%2Fgroup%2Fperl.perl6.internals%2Fthreads%3Fstart%3D30%26order%3Drecent%26&_doneTitle=Back&&d#6bedca9a038ed1d9>



=head3 imcc.globals--

Leo removed some imcc globals.  Nice work.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e6020b8ffabbad88/028cfc120dffd3a1?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#028cfc120dffd3a1>



=head3 ensure directories exist first

Andy Dougherty fixed a problem with writing a file in a non-existant directory.  Leo applied the patch.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a69db424446d8783/b7e77e4177a5e0b7?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#b7e77e4177a5e0b7>



=head3 Namespace-sub invocation

Last week Luke Palmer wanted to know about calling subs in namespaces.  I posted Leo's answer, but Dan does not like it.  It should be a two step process.  First fetch, then invoke.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7b48bde181d11a1a/5805eb2e5eb0bb02?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#5805eb2e5eb0bb02>



=head3 What is an opcode?

Thomas Seiler attempted to clear up some perceived confusion about what exactly an "opcode" is.  No responses...

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/9f4ab6159579062e/34d31c62a32b54be?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#34d31c62a32b54be>



=head3 Lexicals, continuations, and register allocation

Dan voiced a final word in this long lived and lively thread, which kicked off several children.  Return Continuations (even once promoted) restore their registers.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/3a61fe5e97d17389/0603ff13ca52f0ff?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#0603ff13ca52f0ff> -- Dan's ruling


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/214157bf29879710/4c15aa4a1f56c20a?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#4c15aa4a1f56c20a> -- the long and lively thread



=head3 keyword arguments

Sam Ruby wondered how he out to handle keyword arguments to functions.  Dan admitted that this is complex and outlined the cheat he has been contemplating.  No one has either commented on or implemented it yet.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/092577189995ee1d/f22bdbb497de3975?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#f22bdbb497de3975>



=head3 What is and isn't up for grabs

Dan attempted to layout clear rules as to what things he would entertain until parrot was functionally complete.  Lets hope it sticks.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/168d0efbd0cfc1f4/b594c3a38848d19a?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#b594c3a38848d19a>



=head3 AST + COMPILE_IMMEDIATE == :-(

Bernhard Schmalhofer provided a patch to fix some of the :-(.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/bea07c6bee8717aa/8a916b80e4dc4c20?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#8a916b80e4dc4c20>



=head3 t/dynclass/pybuiltin.t fails

Will added a BUG to RT for this.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/5b28ae722a86bc80/bc5bad4a9a843190?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#bc5bad4a9a843190>



=head3 benchmark tests

Justin DeVuyst submitted a patch, which fell through the cracks, to make the benchmarks also be tests.  Fortunately Matt Diephouse rescued it from the cracks, and Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/59b554e4cd6200ca/6e273b614f34004a?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#6e273b614f34004a>




=head3 too many opcodes

Leo voiced his opinion that there were too many opcodes and suggested a scheme for cutting down on them.  Dan corrected him that there were not too many.  Despite this surface disagreement, however, the spirit of Leo's complaint was addressed by Dan.  Thus, they can both be happy.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/a549937c1d815228/64547f8c695af32e?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#64547f8c695af32e>



=head3 C89 issues

There was a little confusion about whether or not variable declarations could follow code or not in C89.  The answer is not.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/98345a122be7a9e2/1bf9ebeca3e9fe3f?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#1bf9ebeca3e9fe3f>



=head3 perlhash iter busted

Sam Ruby noticed that the perlhash iter did not work.  So he submitted a test case for it.  Leo fixed it (and presumably applied the test).

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/acb11073ce7d12c2/b79d4f2f7409bbde?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#b79d4f2f7409bbde>



=head3 warnings cleanup

Garrett Rooney submitted a patch to fix some warnings.  Leo applied it.  

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/355b38da2a067793/4aec9b7ad3ac3aae?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#4aec9b7ad3ac3aae>



=head3 Objects, classes, metaclasses, and MMD dispatch 

Dan's attempt to spec out objects from last week led to some discussion of MMD.  Leo suggested an implementation, and silence reigned.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/eb26d8206c8346d4/a59e8326a855b612?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#a59e8326a855b612>


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/ebe0bd5533aa3655/2c13224380f7b64b?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#2c13224380f7b64b> -- more MMD stuff


=head3 more Tcl stuff

Will added more new stuff to Tcl.  Yay, Will!

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/98c099993a0ef979/873d4926bf1d80ef?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#873d4926bf1d80ef>



=head3 internal exception clean up

James deBoer submitted a patch that cleans up internal exception output.  Then later he submitted a second better version of the patch.  Warnock applies.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/7ebda933279848a8/9504b2207764af73?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#9504b2207764af73>



=head3 dynamic evaluation of PAST

Bernhard Schmalhofer submitted a patch to add support for PAST dynamic evaluation.  Leo applied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/55da497e90c63c16/05d1c7ecf5d40021?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#05d1c7ecf5d40021>



=head3 Inline Caching

Leo explained inline caches and why 19 out of 20 calls like them.  This led to his suggesting that some of the opcodes we have which get offsets from strings are a premature optimization.  This led to some discussion about whether or not what he suggested was in the Dan's earlier mandate.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/11bf7f5b99611372/a4b461185a77d149?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#a4b461185a77d149> -- inline caching


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/824cae85acf178d8/ce8deb56f8b293b4?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#ce8deb56f8b293b4> -- Leo's suggestion



=head3 help target in make

Bernhard Schmalhofer (whose name makes me very thankful for copy and paste) submitted a patch anding new help target to parrot/docs/Makefile.  Will appied it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/9df1f9c203964ebd/881f8aef14e5bd29?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#881f8aef14e5bd29>



=head3 Parrot and Strong Types

Cameron Zemek asked about supporting strongly typed languages on Parrot.  I got strong typing and static typing confused, fortunately Dan came to the rescue with a good explanation.  During the course of this thread, both Haskell on Parrot and Prolog on Parrot got suggested.  I like them both, a lot.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/77b5a3793a41a73c/1b4029708201449c?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#1b4029708201449c> -- original message


L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/77b5a3793a41a73c/1b4029708201449c?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#1b4029708201449c> -- Dan to the rescue



=head3 move libnci.def out of root dir

Mitchell ::mumble:: provided a patch to do the above some time ago.  Will rescued it and asked for a ruling.  The ruling is that it should be done.  I don't know if it WAS done, but it should be.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/40960c8b3e7d3f48/428b477f8cfdc896?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#428b477f8cfdc896>



=head3 Tru64 cc/ld issues

Jarkko Hietaniemi posted a problem with building on Tru64.  Sam Ruby committed it.

L<http://groups-beta.google.com/group/perl.perl6.internals/browse_frm/thread/e668cb261aade149/e04b3c73c582e4f4?_done=%2Fgroup%2Fperl.perl6.internals%3F&_doneTitle=Back+to+topics&_doneTitle=Back&&d#e04b3c73c582e4f4>





=head2 The usual footer

If you find these summaries useful or enjoyable, please consider
contributing to the Perl Foundation to help support the development of
Perl. You might also like to send feedback to ubermatt@gmail.com

L<http://donate.perl-foundation.org/> -- The Perl Foundation
L<http://dev.perl.org/perl6/> -- Perl 6 Development site
L<http://planet.parrotcode.org/> -- Parrot Blog aggregator




