=head1 The Perl 6 Summary for the week ending 20040222

Welcome to the latest belated Perl 6 Summary. I'm running late, so we'll
just dive straight into perl6-internals

=head2 Loading bytecode at runtime

Last week Dan had specced out the rules for runtime loading of
bytecode. This week, Leo Tötsch started implementing it. There was a
certain amount of quibbling about syntax, but that was quickly sorted
out.

L<http://groups.google.com/groups?selm=200402200842.i1K8g4F15344@thu8.leo.home>

=head2 Objects

Dan continued his  work on objects and on  sorting out method resolution
niggles. Getting ahead of myself slightly, he finished it this week.

L<http://groups.google.com/groups?selm=a06010208bc581095417f@[172.24.18.98]>

=head2 Obfuscated Parrot

I reproduce this product of Leo Tötsch's warped brane without comment:

     bounds 1
     trace 0
     split P0, '', "\nrekcaH torraP rehtona tsuJ"
     add I1, 3
     add I2, 4
     branch I2
     pack S23, 793, I1, I0
     branch I2
     add I2, 382, I1
     branch I2
     new S23, 911, I0, I0
     branch I1
     transcode S23, S0, -19
     end

And, to compound things:

    bounds 1
    trace 0
    newclass P0, "Just another Parrot Hacker\n"
    shift S0, P5
    does I0, P0, S0
    add I0, 4
    bsr I0
    pack S0, 381, I0, I0
    invoke
    ret

Look, OO badness


L<http://groups.google.com/groups?selm=40309141.1030003@toetsch.at>

L<http://groups.google.com/groups?selm=200402161324.i1GDOgu07546@thu8.leo.home>

=head2 IO fixes for Win32

I must confess I didn't understand the details of the discussion, but
Goplat, Vladimir Lipsky and Melvin Smith spent some time working on IO
issues under Win32.

L<http://groups.google.com/groups?selm=20040216191018.52351.qmail@web20809.mail.yahoo.com>

=head2 Parrot Dumper updated

Jens Rieks continued his sterling work on a Parrot Data::Dumper
equivalent, posting a new version that does bounds checking and PMC
property dumping. A later refinement added support for self referential
data structures and other edge cases.

L<http://groups.google.com/groups?selm=200402161908.40001.parrot@jensbeimsurfen.de>

=head2 ConfigScript3

TOGoS announced a new language targetting Parrot.

L<http://groups.google.com/groups?selm=20040217011132.40119.qmail@web41411.mail.yahoo.com>

L<http://togos.dhs.org/projects/configscript3/>

=head2 Symbol naming and IMCC2

Dan ruled on the symbol naming issue discussion. Essentially, if your
symbol includes a sigil, you're not going to be able to use it
directly. Learn to love symbol tables and C<.alias>.

L<http://groups.google.com/groups?selm=a06010209bc58266e6075@[172.24.18.98]>

=head2 TODO: C<parrotbug>

Dan asked for someone to implement a C<parrotbug> script to handle
building and possibly sending the bug reports into RT. The script
should work in a similar way to perlbug, appending configuration
information etc to any bug report. 

L<http://groups.google.com/groups?selm=a0601020cbc5838c4acab@[172.24.18.98]>

=head2 TODO: Forth as a compiler

Dan asked for a volunteer to fix F<forth.pasm> so that it can be loaded
in as a compiler module, allowing one to do:

    compile P5, ForthCompiler, "1 2 + ."

and have it print out 3.

L<http://groups.google.com/groups?selm=a06010201bc5a61a7ddc0@[10.0.1.2]>

=head2 Documentation tasks

Taking time out to heap praise on the deserving Michael Scott, Dan
outlined a few documentation jobs that need to be done (hopefully)
before the next Parrot release. 

L<http://groups.google.com/groups?selm=a06010207bc5a93a41f3d@[10.0.1.2]>

=head2 SDL goodness

The work on SDL support continued apace, with chromatic checking in
several SDL related fixes and enhancements.

L<http://groups.google.com/groups?selm=1077165919.24319.72.camel@localhost>

L<http://groups.google.com/groups?selm=1077166499.24310.78.camel@localhost>

=head2 Parrot Day at the Austrian Perl Workshop

Thomas Klausner announced that this year's Austrian Perl Workshop would
have a Parrot Day, with a tutorial from Leo Tötsch and hopefully some
other good stuff from Parrot luminaries. Thomas also asked for people
to submit talk ideas.

L<http://groups.google.com/groups?selm=20040220015102.GL2974@zsi.at>

L<http://vienna.pm.org/en_workshop.html>

=head2 SDL + Parrot = Tetris

Jens Rieks announced the alpha of an implementation of tetris in Parrot
using SDL for the display. Yay Jens! Mmm... a time sink... just what
the Parrot developers need.

L<http://groups.google.com/groups?selm=200402200407.43622.parrot@jensbeimsurfen.de>

=head2 The First International Workshop on Interpreted Languages

Dan pointed  us all at the First International Workshop on Interpreted
Languages' Call for Papers. 

L<http://groups.google.com/groups?selm=a06010207bc5c09cf7874@[10.0.1.2]>

L<http://www.sebastian-bergmann.de/InterpretedLanguages2004/>

=head1 Meanwhile, in perl6-languages

=head2 Traits/Roles

I know I've had this feeling of déjà vu before, but I've spelt it
right this time. Discussion of Roles continued this week. If I never
read another discussion of the difference between C<Dog::bark> and
C<Tree::bark> again, it'll be too soon.

=head2 The Sort Problem

The other topic of discussion this week covered sorting. It looks as
though Perl 6's C<sort> function is going to be rather more powerful
than the Perl 5 equivalent; hopefully this means Perl 6 will finally
see the back of code like:

    map  { $_->[0] }
    sort { $a->[1] <=> $a->[1] }
    map  { [$_, extract_key_from($_) } @array

Damian's post on the subject, referenced below, looks like the front
runner. It's worth reading if you're interested in sort itself or if
you're interested in how Perl 6's multi dispatch will work.

L<http://groups.google.com/groups?selm=402FF9E1.90403@conway.org>

=head2 Allison Randal is the new Project Manager

Nat Torkington announced that he's managed to pass the Perl 6
Project Manager hat on to Allison Randal's increasingly be-hatted
head. Congratulations and commiserations to Nat and Allison. I'll leave
it up to you to decide who gets which.

L<http://groups.google.com/groups?selm=94D27CCA-6319-11D8-811E-0003938ADEFE@oreilly.com>

=head1 Announcements, Apologies, Acknowledgements

Um... I'm late. Sorry.

If you find these summaries useful or enjoyable, please consider
contributing to the Perl Foundation to help support the development of
Perl. You might also like to send me feedback at
L<mailto:p6summarizer@bofh.org.uk>, or drop by my website.

L<http://donate.perl-foundation.org/> -- The Perl Foundation

L<http://dev.perl.org/perl6/> -- Perl 6 Development site

L<http://www.bofh.org.uk/> -- My website, "Just a Summary"
